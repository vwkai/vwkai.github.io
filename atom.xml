<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kai</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://vwkai.com/"/>
  <updated>2019-10-25T13:31:58.255Z</updated>
  <id>http://vwkai.com/</id>
  
  <author>
    <name>Kai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于hexo插入图片的问题</title>
    <link href="http://vwkai.com/2019/10/25/hexo-images/"/>
    <id>http://vwkai.com/2019/10/25/hexo-images/</id>
    <published>2019-10-25T05:09:43.000Z</published>
    <updated>2019-10-25T13:31:58.255Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现hexo在文章中插入图片的时候有点麻烦，查了一下发现还是有很简洁的方法的，总结一下自己试过的几种方式：</p><h3 id="本地图片引用（自动生成目录）"><a href="#本地图片引用（自动生成目录）" class="headerlink" title="本地图片引用（自动生成目录）"></a>本地图片引用（自动生成目录）</h3><ul><li>将配置文件_config.yml里面的post_asset_folder字段修改为true</li><li>在Hexo主目录下执行：<code>npm install hexo-asset-image --save</code>，这是下载安装一个可以上传本地图片的插件</li><li>插件安装完毕后，在建立新的文章时，如<code>hexo new test_image</code>，在<code>source/_posts/</code>目录下除了会生成“test_image.md”以外，还会生成一个与文章标题相同的目录(source/_posts/test_image/)，这个目录就是存放文章内图片的地方</li><li>在编写文章时，先将图片放到相应的同名目录下，在文章中按markdown语法进行引用，注意此处是<font color="red">相对路径</font>，例如：<code>![](test_image/image-1.png)</code></li></ul><a id="more"></a><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>每个文章中的图片单独存放，并且图片目录会自动生成，方便图片的管理与查找</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>文章目录(source/_post/)日积月累会变得很大，里面既有文章又有图片目录，稍显乱一些</li><li>图片要先拷贝到相应的图片目录下，做好图片命名，然后在文章中引入，图片少还ok，图片多的话感觉会比较繁琐</li><li>图片复用不是很方便</li></ul><p>目前我自己的文章中图片不是很多，所以采用的还是这种方式。</p><h3 id="本地图片引用（手动生成目录）"><a href="#本地图片引用（手动生成目录）" class="headerlink" title="本地图片引用（手动生成目录）"></a>本地图片引用（手动生成目录）</h3><p>如果想对图片进行统一管理，可以单独创建一个图片目录，将所有的图片都放到一起，在source目录下创建一个images的目录<code>source/images</code>，在文章中进行引用的时候，要写<font color="red">绝对路径</font>，例如：<code>![](/images/image-1.png)</code></p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ul><li>所有的文章图片在公共目录统一进行存放和管理，不会弄乱文章目录，图片复用方便</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ul><li>图片目录会变得非常大，如果想按文章细分目录保存的话，需要手动创建目录</li><li>与上一个方法有同样的问题，如果文章中的图片较多，引入时会麻烦一些</li></ul><h3 id="远程图片引用"><a href="#远程图片引用" class="headerlink" title="远程图片引用"></a>远程图片引用</h3><p>推荐这种方式，前两种方式都是本地存储，这一种方式是放到图片服务商的服务器当中，也就是所说的图床，国内比较好的有七牛云，微博，腾讯云等等，推荐一个app：IPic（<a href="https://itunes.apple.com/cn/app/id1101244278?mt=12" target="_blank" rel="noopener">下载地址</a>），可以直接将图片上传到图床当中，并自动生成markdown地址，在文章中直接引用，试了试用起来真的很爽，哈哈哈。IPic目前上传到微博是完全免费的，上传其他的服务商app需要解锁付费使用（有个免费试用期）。</p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ul><li>图片是上传到服务商，不占用自己的本地空间</li><li>图片服务商会对图片加载做优化，访问速度会比较快</li><li>通过像IPic这样的app进行上传并自动生成好markdown地址，非常的方便、简单，比自己去本地管理图片要方便很多。</li></ul><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ul><li>如果服务商挂了，图片访问也就跟着挂了（可能性极低）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现hexo在文章中插入图片的时候有点麻烦，查了一下发现还是有很简洁的方法的，总结一下自己试过的几种方式：&lt;/p&gt;
&lt;h3 id=&quot;本地图片引用（自动生成目录）&quot;&gt;&lt;a href=&quot;#本地图片引用（自动生成目录）&quot; class=&quot;headerlink&quot; title=&quot;本地图片引用（自动生成目录）&quot;&gt;&lt;/a&gt;本地图片引用（自动生成目录）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将配置文件_config.yml里面的post_asset_folder字段修改为true&lt;/li&gt;
&lt;li&gt;在Hexo主目录下执行：&lt;code&gt;npm install hexo-asset-image --save&lt;/code&gt;，这是下载安装一个可以上传本地图片的插件&lt;/li&gt;
&lt;li&gt;插件安装完毕后，在建立新的文章时，如&lt;code&gt;hexo new test_image&lt;/code&gt;，在&lt;code&gt;source/_posts/&lt;/code&gt;目录下除了会生成“test_image.md”以外，还会生成一个与文章标题相同的目录(source/_posts/test_image/)，这个目录就是存放文章内图片的地方&lt;/li&gt;
&lt;li&gt;在编写文章时，先将图片放到相应的同名目录下，在文章中按markdown语法进行引用，注意此处是&lt;font color=&quot;red&quot;&gt;相对路径&lt;/font&gt;，例如：&lt;code&gt;![](test_image/image-1.png)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://vwkai.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://vwkai.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MySQL事务</title>
    <link href="http://vwkai.com/2019/09/06/mysql-transaction/"/>
    <id>http://vwkai.com/2019/09/06/mysql-transaction/</id>
    <published>2019-09-06T13:19:12.000Z</published>
    <updated>2019-10-25T13:31:58.259Z</updated>
    
    <content type="html"><![CDATA[<style>    table {width : 500px;}     table th:nth-of-type(1) {        width: 100px;    }    table th:nth-of-type(2) {        width: 400px;    }</style><h4 id="一、事务的基本要素（ACID）"><a href="#一、事务的基本要素（ACID）" class="headerlink" title="一、事务的基本要素（ACID）"></a>一、事务的基本要素（ACID）</h4><p>1、原子性（Atomicity）：事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。<br>2、一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。<br>3、隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。<br>4、持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。</p><a id="more"></a><h4 id="二、事务的并发问题"><a href="#二、事务的并发问题" class="headerlink" title="二、事务的并发问题"></a>二、事务的并发问题</h4><p>1、脏读：事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据<br>2、不可重复读：事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致。<br>3、幻读：</p><ul><li>事务A对数据进行查询，发现数据并不存在，准备执行insert操作，此时事务B在事务A执行插入之前进行了insert，并提交事务，此时事务A再执行insert的时候会发生报错，这种查询的时候明明没有，插入却提示已经存在的现象。</li><li>事务A对数据进行查询，如果同时事务B插入了新数据并提交，事务A再更新时，就会“惊奇的”发现了这些新数据，貌似之前读到的数据是“鬼影”一样的幻觉。</li><li>事务A对数据进行查询，如果同时事务B删除了某条数据并提交，但事务A并不知道数据已被删除，去修改被删除的数据时，发现无法更新成功。</li></ul><p>4、更新丢失：两个事务在并发下同时进行更新，后一个事务的更新覆盖了前一个事务更新的情况，<font color="red">更新丢失是数据没有保证一致性导致的</font>。比如，事务A 修改了一条记录，事务B 在 事务A 提交的同时也进行了一次修改并且提交。当事务A查询的时候，会发现刚才修改的内容没有被修改，好像丢失了更新。</p><p>解决方案：<br>脏读和不可重复读，通过调整事务隔离级别即可解决，在可重复读的隔离级别下产生的幻读问题，可以通过间歇锁的方式解决，更新丢失可以通过乐观锁或排他锁解决。<br><mark><a href="/2019/08/25/mysql-lock/" title="MySQL锁机制">MySQL锁机制</a></mark></p><h4 id="三、事务的实现方式"><a href="#三、事务的实现方式" class="headerlink" title="三、事务的实现方式"></a>三、事务的实现方式</h4><table><thead><tr><th>特征</th><th>InnoDB实现方式</th></tr></thead><tbody><tr><td>原子性（A）</td><td>回滚日志（Undo Log）：用于记录数据修改前的状态</td></tr><tr><td>一致性（C）</td><td>重做日志（Redo Log）：用于记录数据修改后的状态</td></tr><tr><td>隔离性（I）</td><td>锁：用于资源隔离，分为共享锁和排他锁</td></tr><tr><td>持久性（D）</td><td>重做日志（Redo Log）+ 回滚日志（Undo Log）</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
    table {width : 500px;} 
    table th:nth-of-type(1) {
        width: 100px;
    }
    table th:nth-of-type(2) {
        width: 400px;
    }
&lt;/style&gt;

&lt;h4 id=&quot;一、事务的基本要素（ACID）&quot;&gt;&lt;a href=&quot;#一、事务的基本要素（ACID）&quot; class=&quot;headerlink&quot; title=&quot;一、事务的基本要素（ACID）&quot;&gt;&lt;/a&gt;一、事务的基本要素（ACID）&lt;/h4&gt;&lt;p&gt;1、原子性（Atomicity）：事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。&lt;br&gt;2、一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。&lt;br&gt;3、隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。&lt;br&gt;4、持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL行锁定测试</title>
    <link href="http://vwkai.com/2019/08/26/mysql-lock-rowlock-test/"/>
    <id>http://vwkai.com/2019/08/26/mysql-lock-rowlock-test/</id>
    <published>2019-08-26T01:42:36.000Z</published>
    <updated>2019-10-25T13:31:58.256Z</updated>
    
    <content type="html"><![CDATA[<style>table {width : 100%;} table th:nth-of-type(1) {    width: 20%;}  table th:nth-of-type(2) {    width: 40%;}table th:nth-of-type(3) {    width: 40%;}</style><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##准备测试数据</span><br><span class="line">create table locktest(id int primary key,col1 int,index(col1));</span><br><span class="line">insert into locktest values(1,10);</span><br><span class="line">insert into locktest values(2,20);</span><br><span class="line">insert into locktest values(3,30);</span><br><span class="line">insert into locktest values(4,40);</span><br><span class="line">insert into locktest values(5,50);</span><br></pre></td></tr></table></figure><h2 id="非唯一索引"><a href="#非唯一索引" class="headerlink" title="非唯一索引"></a>非唯一索引</h2><h3 id="范围查询，临键锁（一）"><a href="#范围查询，临键锁（一）" class="headerlink" title="范围查询，临键锁（一）"></a>范围查询，临键锁（一）</h3><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 30 and col1 &lt; 50 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  4 |   40 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">##col1为20时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,20);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为30时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,30);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为49时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,49);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,50);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为51时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(18,51);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为19时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(17,19);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为20时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></table></figure><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、40、50</td></tr><tr><td>查询条件</td><td>&gt; 30 and &lt; 50</td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(20，40]、(40，50]</td></tr><tr><td>记录锁</td><td>40，50</td></tr></tbody></table><a id="more"></a><h3 id="范围查询，临键锁（二）"><a href="#范围查询，临键锁（二）" class="headerlink" title="范围查询，临键锁（二）"></a>范围查询，临键锁（二）</h3><h4 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 30 and col1 &lt; 50;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  4 |   40 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为29时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,29);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,30);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为49时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,49);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,50);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为51时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,51);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1 = 30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1 = 40;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1 = 50;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></table></figure><h4 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 30 and &lt; 50</td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(30，40]、(40，50]</td></tr><tr><td>记录锁</td><td>40，50</td></tr></tbody></table><h3 id="范围查询，临键锁（三）"><a href="#范围查询，临键锁（三）" class="headerlink" title="范围查询，临键锁（三）"></a>范围查询，临键锁（三）</h3><h4 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt;  select * from locktest where col1 &lt; 30 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">+----+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select  * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(9,30);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,31);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为40时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,40);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为29时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,29);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为5时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,5);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为1时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,1);</span><br><span class="line">c^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为30时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为20时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 2  Changed: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="结论-2"><a href="#结论-2" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&lt; 30 </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(-∞，10]、(10，20]、(20，30]</td></tr><tr><td>记录锁</td><td>10，20，30</td></tr></tbody></table><h3 id="范围查询，临键锁（四）"><a href="#范围查询，临键锁（四）" class="headerlink" title="范围查询，临键锁（四）"></a>范围查询，临键锁（四）</h3><h4 id="举例-3"><a href="#举例-3" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  select * from locktest where col1 &gt; 40 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为35时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,35);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">##col1为39时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,39);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,40);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,41);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为51时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,51);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为50时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></table></figure><h4 id="结论-3"><a href="#结论-3" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 40 </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(40，50]，(50，∞]</td></tr><tr><td>记录锁</td><td>50</td></tr></tbody></table><h3 id="范围查询，间歇锁"><a href="#范围查询，间歇锁" class="headerlink" title="范围查询，间歇锁"></a>范围查询，间歇锁</h3><h4 id="举例-4"><a href="#举例-4" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 50 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为50时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为45时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,45);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为51时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,51);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为60时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,60);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></table></figure><h4 id="结论-4"><a href="#结论-4" class="headerlink" title="结论"></a>结论</h4><table><tr><th>列</th><th>值</th><th>扩展</th></tr><tr><td>数据（col1）</td><td>10、20、30、40、50</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>> 50</td><td>>=50</td></tr><tr><td>锁类型</td><td>GAP锁</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(50，∞)</td><td>(50，∞]</td></tr><tr><td>记录锁</td><td>无</td><td>50</td></tr><tr><td>备注</td><td colspan="2"><mark>唯一索引/主键索引在这个场景下与非唯一索引的结论一致</mark></td></tr></table><h3 id="范围查询，临键锁（五）"><a href="#范围查询，临键锁（五）" class="headerlink" title="范围查询，临键锁（五）"></a>范围查询，临键锁（五）</h3><h4 id="举例-5"><a href="#举例-5" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 &lt; 10 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为11时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,11);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为25时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,25);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为9时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,9);</span><br><span class="line">c^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为1时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,1);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为10时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where col1=10;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为20时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="结论-5"><a href="#结论-5" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&lt; 10 </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(-∞，10]</td></tr><tr><td>记录锁</td><td>10</td></tr><tr><td>备注</td><td><mark>唯一索引/主键索引在这个场景下与非唯一索引的结论一致</mark></td></tr></tbody></table><h3 id="等值查询，临键锁"><a href="#等值查询，临键锁" class="headerlink" title="等值查询，临键锁"></a>等值查询，临键锁</h3><h4 id="举例-6"><a href="#举例-6" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 = 30 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  3 |   30 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为20时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为29时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,29);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为21时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(9,21);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为19时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,19);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,31);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为39时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,39);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,41);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br></pre></td></tr></table></figure><h4 id="结论-6"><a href="#结论-6" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>= 30  </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(20，30]、 (30，40)<font color="red">注意此处是小括号，40不加锁，属于GAP锁</font></td></tr><tr><td>记录锁</td><td>30</td></tr></tbody></table><h3 id="等值查询，间歇锁"><a href="#等值查询，间歇锁" class="headerlink" title="等值查询，间歇锁"></a>等值查询，间歇锁</h3><h4 id="举例-7"><a href="#举例-7" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 = 35 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,31);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为29时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,29);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为39时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,39);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,41);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="结论-7"><a href="#结论-7" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>= 35</td></tr><tr><td>锁类型</td><td>Gap锁</td></tr><tr><td>加锁区间</td><td>（30，40）</td></tr><tr><td>记录锁</td><td>无</td></tr></tbody></table><h3 id="范围查询，临键锁（六）"><a href="#范围查询，临键锁（六）" class="headerlink" title="范围查询，临键锁（六）"></a>范围查询，临键锁（六）</h3><h4 id="举例-8"><a href="#举例-8" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 31 and col1 &lt; 36 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,31);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为35时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,35);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为39时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,39);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,41);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="结论-8"><a href="#结论-8" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 31 and &lt; 36</td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>（30，40]</td></tr><tr><td>记录锁</td><td>40</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#多增加一些数据，方便唯一索引的测试</span><br><span class="line">insert into locktest values(10,60);</span><br><span class="line">insert into locktest values(15,70);</span><br><span class="line">insert into locktest values(20,80);</span><br><span class="line">insert into locktest values(25,90);</span><br><span class="line">insert into locktest values(30,100);</span><br></pre></td></tr></table></figure><h2 id="唯一索引-主键索引"><a href="#唯一索引-主键索引" class="headerlink" title="唯一索引/主键索引"></a>唯一索引/主键索引</h2><h3 id="等值查询，记录锁"><a href="#等值查询，记录锁" class="headerlink" title="等值查询，记录锁"></a>等值查询，记录锁</h3><h4 id="举例-9"><a href="#举例-9" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where id = 10 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">| 10 |   60 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">| 20 |   80 |</span><br><span class="line">| 25 |   90 |</span><br><span class="line">| 30 |  100 |</span><br><span class="line">+----+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为10时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 10;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为5时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为15时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 15;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为9时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(9,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为13时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(13,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="结论-9"><a href="#结论-9" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（id）</td><td>1、2、3、4、5、10、15、20、25、30</td></tr><tr><td>查询条件</td><td>= 10</td></tr><tr><td>锁类型</td><td>记录锁</td></tr><tr><td>加锁区间</td><td>无</td></tr><tr><td>记录锁</td><td>10</td></tr></tbody></table><h3 id="等值查询，间歇锁-1"><a href="#等值查询，间歇锁-1" class="headerlink" title="等值查询，间歇锁"></a>等值查询，间歇锁</h3><h4 id="举例-10"><a href="#举例-10" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where id = 7 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">| 20 |   80 |</span><br><span class="line">| 25 |   90 |</span><br><span class="line">| 30 |  100 |</span><br><span class="line">+----+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为5时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为10时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 10;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为6时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,10);</span><br><span class="line">C^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为11时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(11,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="结论-10"><a href="#结论-10" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（id）</td><td>1、2、3、4、5、10、15、20、25、30</td></tr><tr><td>查询条件</td><td>= 7</td></tr><tr><td>锁类型</td><td>Gap锁</td></tr><tr><td>加锁区间</td><td>（5，10）</td></tr><tr><td>记录锁</td><td>10</td></tr><tr><td>备注</td><td><mark>条件是唯一索引/主键索引，做等值查询，数据不存在时，变为Gap锁</mark></td></tr></tbody></table><h3 id="范围查询，临键锁"><a href="#范围查询，临键锁" class="headerlink" title="范围查询，临键锁"></a>范围查询，临键锁</h3><h4 id="举例-11"><a href="#举例-11" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt;  select * from locktest where id &gt; 6 and id &lt; 18 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">+----+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">| 20 |   80 |</span><br><span class="line">| 25 |   90 |</span><br><span class="line">| 30 |  100 |</span><br><span class="line">+----+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为5时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为10时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 10;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为15时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 15;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为20时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 20;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为25时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 25;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为6时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,10);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为19时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(19,10);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为21时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(21,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="结论-11"><a href="#结论-11" class="headerlink" title="结论"></a>结论</h4><table><tr><th>列</th><th>值</th><th>扩展</th></tr><tr><td>数据（id）</td><td>1、2、3、4、5、10、15、20、25、30</td><td>1、2、3、4、5、10、15、20、25、30</td></tr><tr><td>查询条件</td><td>> 6 and  < 18</td><td>> 16 and  < 19</td></tr><tr><td>锁类型</td><td>临键锁</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(5，10]，(10，15]、(15，20]</td><td>(15，20]</td></tr><tr><td>记录锁</td><td>10、15、20</td><td>20</td></tr><tr><td>备注</td><td colspan="2"><mark>条件是唯一索引/主键索引，做范围查询时，变为临键锁（查询结果有数据或者没有数据，都会变为临键锁）</mark></td></tr></table>]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
table {width : 100%;} 
table th:nth-of-type(1) {
    width: 20%;
}
  table th:nth-of-type(2) {
    width: 40%;
}
table th:nth-of-type(3) {
    width: 40%;
}
&lt;/style&gt;

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;##准备测试数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create table locktest(id int primary key,col1 int,index(col1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(1,10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(2,20);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(3,30);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(4,40);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(5,50);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;非唯一索引&quot;&gt;&lt;a href=&quot;#非唯一索引&quot; class=&quot;headerlink&quot; title=&quot;非唯一索引&quot;&gt;&lt;/a&gt;非唯一索引&lt;/h2&gt;&lt;h3 id=&quot;范围查询，临键锁（一）&quot;&gt;&lt;a href=&quot;#范围查询，临键锁（一）&quot; class=&quot;headerlink&quot; title=&quot;范围查询，临键锁（一）&quot;&gt;&lt;/a&gt;范围查询，临键锁（一）&lt;/h3&gt;&lt;h4 id=&quot;举例&quot;&gt;&lt;a href=&quot;#举例&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#事务A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; begin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from locktest where col1 &amp;gt; 30 and col1 &amp;lt; 50 for update;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | col1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  4 |   40 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#事务B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; begin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from locktest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | col1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 |   10 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  2 |   20 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  4 |   40 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  5 |   50 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为20时插入，发生阻塞，插入失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,20);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为30时插入，发生阻塞，插入失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,30);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为49时插入，发生阻塞，插入失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,49);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为50时插入，没有发生阻塞，插入成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,50);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为51时插入，没有发生阻塞，插入成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(18,51);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为19时插入，没有发生阻塞，插入成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(17,19);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为20时更新，没有发生阻塞，更新成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update locktest set col1=20 where col1=20;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Rows matched: 1  Changed: 0  Warnings: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为40时更新，发生阻塞，更新失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update locktest set col1=40 where col1=40;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为50时更新，发生阻塞，更新失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update locktest set col1=50 where col1=50;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据（col1）&lt;/td&gt;
&lt;td&gt;10、20、40、50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查询条件&lt;/td&gt;
&lt;td&gt;&amp;gt; 30 and &amp;lt; 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;锁类型&lt;/td&gt;
&lt;td&gt;临键锁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;加锁区间&lt;/td&gt;
&lt;td&gt;(20，40]、(40，50]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;记录锁&lt;/td&gt;
&lt;td&gt;40，50&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL锁机制</title>
    <link href="http://vwkai.com/2019/08/25/mysql-lock/"/>
    <id>http://vwkai.com/2019/08/25/mysql-lock/</id>
    <published>2019-08-25T02:27:20.000Z</published>
    <updated>2019-10-25T13:31:58.256Z</updated>
    
    <content type="html"><![CDATA[<h3 id="共享锁"><a href="#共享锁" class="headerlink" title="共享锁"></a>共享锁</h3><p>共享锁又称为<font color="red">读锁</font>，简称<font color="red" size="4">S锁</font>，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。<br>其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。<br>如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不能加排他锁。获得共享锁的事务只能读数据，不能修改数据。</p><font color="red">使用方式：在需要执行的语句后面加上 lock in share mode</font><h3 id="排他锁"><a href="#排他锁" class="headerlink" title="排他锁"></a>排他锁</h3><p>排他锁又称为<font color="red">写锁</font>，简称<font color="red" size="4">X锁</font>，顾名思义，排他锁就是不能与其他所并存，如一个事务获取了一个数据行的排他锁，其他事务就不能再获取该行的其他锁，包括共享锁和排他锁，但是获取排他锁的事务是可以对数据就行读取和修改。排它锁是悲观锁的一种实现。<br>排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。mysql InnoDB引擎默认的修改数据语句，<font color="red">update,delete,insert都会自动给涉及到的数据加上排他锁。</font><br>select语句默认不会加任何锁类型，加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。<font color="red">所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过for update和lock in share mode锁的方式查询数据</font>，但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。<br>若事务 1 对数据对象A加上X锁，事务 1 可以读A也可以修改A，其他事务不能再对A加任何锁，直到事物 1 释放A上的锁。这保证了其他事务在事物 1 释放A上的锁之前不能再读取和修改A。<font color="red">排它锁会阻塞所有的排它锁和共享锁。</font></p><font color="red">使用方式：在需要执行的语句后面加上for update</font><a id="more"></a><h3 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h3><p>乐观锁不是数据库自带的，需要我们自己去实现。乐观锁是指操作数据库时(更新操作)，想法很乐观，认为这次的操作不会导致冲突，在操作数据时，并不进行任何其他的特殊处理（也就是不加锁），而在进行更新后，再去判断是否有冲突了。</p><p>通常实现是这样的：在表中的数据进行操作时(更新)，先<font color="red">给数据表加一个版本(version)字段</font>，每操作一次，将那条记录的版本号加1。也就是先查询出那条记录，获取出version字段,如果要对那条记录进行操作(更新),则先判断此刻version的值是否与刚刚查询出来时的version的值相等，如果相等，则说明这段期间，没有其他程序对其进行操作，则可以执行更新，将version字段的值加1；如果更新时发现此刻的version值与刚刚获取出来的version的值不相等，则说明这段期间已经有其他程序对其进行操作了，则不进行更新操作。</p><p>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">下单操作包括3步骤：</span><br><span class="line"> </span><br><span class="line">1.查询出商品信息</span><br><span class="line"> </span><br><span class="line">select (status,status,version) from t_goods where id=#&#123;id&#125;</span><br><span class="line"> </span><br><span class="line">2.根据商品信息生成订单</span><br><span class="line"> </span><br><span class="line">3.修改商品status为2</span><br><span class="line"> </span><br><span class="line">update t_goods </span><br><span class="line"> </span><br><span class="line">set status=2,version=version+1</span><br><span class="line"> </span><br><span class="line">where id=#&#123;id&#125; and version=#&#123;version&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h3><p>对于悲观锁的概念解释主要有两种，但本质上悲观锁主要用于数据库访问的并发控制上。<br>解释一<br>悲观锁是指对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，在整个数据处理过程中，将数据处于锁定状态，在悲观锁的情况下，为了保证事务的隔离性，就需要一致性锁定读。读取数据时给加锁，其它事务无法修改这些数据。修改删除数据时也要加锁，其它事务无法读取这些数据。</p><p>解释二<br>在关系数据库管理系统里，悲观并发控制（又名“悲观锁”，Pessimistic Concurrency Control，缩写“PCC”）是一种并发控制的方法。它可以阻止一个事务以影响其他用户的方式来修改数据。如果一个事务执行的操作对某行数据应用了锁，那只有当这个事务把锁释放，其他事务才能够执行与该锁冲突的操作。</p><p>悲观锁处理流程：</p><ol><li>在对任意记录进行修改前，先尝试为该记录加上排他锁（exclusive locking）</li><li>如果加锁失败，说明该记录正在被修改，那么当前查询可能要等待或者抛出异常</li><li>如果成功加锁，那么就可以对记录做修改，事务完成后就会解锁了</li><li>其间如果有其他对该记录做修改或加排他锁的操作，都会等待我们解锁或直接抛出异常</li></ol><hr><h3 id="MySQL-InnoDB支持三种行锁定方式："><a href="#MySQL-InnoDB支持三种行锁定方式：" class="headerlink" title="MySQL InnoDB支持三种行锁定方式："></a>MySQL InnoDB支持三种行锁定方式：</h3><h5 id="1、记录锁（Record-Lock）"><a href="#1、记录锁（Record-Lock）" class="headerlink" title="1、记录锁（Record Lock）"></a>1、记录锁（Record Lock）</h5><p>定义：当SQL执行按照唯一性（Primary key、Unique key）索引进行数据的检索时，<font color="red">查询条件等值匹配且查询的数据是存在的</font>，这时SQL语句加上的锁即为记录锁（Record locks），锁住具体的索引项。<br>注意：</p><ul><li>行锁锁定的是索引记录，而不是行数据，也就是说锁定的是key</li><li>如果不是索引字段，则退化成表锁。</li></ul><h5 id="2、间隙锁（Gap-Lock）"><a href="#2、间隙锁（Gap-Lock）" class="headerlink" title="2、间隙锁（Gap Lock）"></a>2、间隙锁（Gap Lock）</h5><p>定义：锁定索引记录间隙，确保索引记录的间隙不变。<font color="red">对于键值在条件范围内但并不存在的记录，叫做“间隙（GAP)”</font>，InnoDB也会对这个“间隙”加锁，这种锁机制就是所谓的间隙锁（GAP LOCK）。<font color="red">Gap Lock在InnoDB的唯一作用就是防止其他事务的插入操作，以此防止幻读的发生。</font><br>注意：</p><ul><li>间隙锁是针对事务隔离级别为【可重复读】或以上级别才有的。如果把事务的隔离级别降级为【读已提交(Read Committed, RC)】，间隙锁则会自动失效。</li><li>区间锁，【<font color="red">左开右开</font>】，它封锁索引记录中的间隔，或者第一条索引记录之前的范围，又或者最后一条索引记录之后的范围。</li><li><font color="red">gap锁只会阻塞insert操作</font>，因为gap间隙中是不存在任何记录的，除了insert操作，其他的操作结果应该都等价于空操作，mysql就不去阻塞它了</li><li>范围查询或者等值查询且记录不存在</li></ul><h5 id="3、临键锁（Next-Key-Lock）"><a href="#3、临键锁（Next-Key-Lock）" class="headerlink" title="3、临键锁（Next-Key Lock）"></a>3、临键锁（Next-Key Lock）</h5><p>定义：行锁和间隙锁组合起来就叫临键锁（Next-Key Lock），它的封锁范围，既包含索引记录，又包含索引区间。<br>注意：</p><ul><li>会锁住一段【<font color="red">左开右闭</font>】区间的数据</li></ul><p><mark><a href="/2019/08/26/mysql-lock-rowlock-test/" title="MySQL行锁定测试">MySQL行锁定测试</a></mark></p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>如果更新条件没有走索引，此时会进行全表扫描（<font color="red">行锁在 InnoDB 中是基于索引实现的</font>），扫表的时候，要阻止其他任何的更新操作，所以退化为表锁.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create table test;</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table | Create Table                                                                                                                                                                                                 |</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| test  | CREATE TABLE `test` (</span><br><span class="line">  `aa` varchar(30) NOT NULL,</span><br><span class="line">  `bb` varchar(40) NOT NULL,</span><br><span class="line">  `cc` varchar(50) NOT NULL,</span><br><span class="line">  `id` int(10) NOT NULL,</span><br><span class="line">  KEY `union_index` (`aa`,`bb`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1 |</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id字段没有任何索引</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:center">事务A</th><th style="text-align:center">事务B</th></tr></thead><tbody><tr><td style="text-align:center"><img src="/2019/08/25/mysql-lock/mysql-lock-locktable-1.png" alt=""></td><td style="text-align:center"><img src="/2019/08/25/mysql-lock/mysql-lock-locktable-2.png" alt=""> </td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;共享锁&quot;&gt;&lt;a href=&quot;#共享锁&quot; class=&quot;headerlink&quot; title=&quot;共享锁&quot;&gt;&lt;/a&gt;共享锁&lt;/h3&gt;&lt;p&gt;共享锁又称为&lt;font color=&quot;red&quot;&gt;读锁&lt;/font&gt;，简称&lt;font color=&quot;red&quot; size=&quot;4&quot;&gt;S锁&lt;/font&gt;，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。&lt;br&gt;其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。&lt;br&gt;如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不能加排他锁。获得共享锁的事务只能读数据，不能修改数据。&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;使用方式：在需要执行的语句后面加上 lock in share mode&lt;/font&gt;

&lt;h3 id=&quot;排他锁&quot;&gt;&lt;a href=&quot;#排他锁&quot; class=&quot;headerlink&quot; title=&quot;排他锁&quot;&gt;&lt;/a&gt;排他锁&lt;/h3&gt;&lt;p&gt;排他锁又称为&lt;font color=&quot;red&quot;&gt;写锁&lt;/font&gt;，简称&lt;font color=&quot;red&quot; size=&quot;4&quot;&gt;X锁&lt;/font&gt;，顾名思义，排他锁就是不能与其他所并存，如一个事务获取了一个数据行的排他锁，其他事务就不能再获取该行的其他锁，包括共享锁和排他锁，但是获取排他锁的事务是可以对数据就行读取和修改。排它锁是悲观锁的一种实现。&lt;br&gt;排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。mysql InnoDB引擎默认的修改数据语句，&lt;font color=&quot;red&quot;&gt;update,delete,insert都会自动给涉及到的数据加上排他锁。&lt;/font&gt;&lt;br&gt;select语句默认不会加任何锁类型，加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。&lt;font color=&quot;red&quot;&gt;所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过for update和lock in share mode锁的方式查询数据&lt;/font&gt;，但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。&lt;br&gt;若事务 1 对数据对象A加上X锁，事务 1 可以读A也可以修改A，其他事务不能再对A加任何锁，直到事物 1 释放A上的锁。这保证了其他事务在事物 1 释放A上的锁之前不能再读取和修改A。&lt;font color=&quot;red&quot;&gt;排它锁会阻塞所有的排它锁和共享锁。&lt;/font&gt;&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;使用方式：在需要执行的语句后面加上for update&lt;/font&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis常用命令</title>
    <link href="http://vwkai.com/2019/02/18/redis-common-command/"/>
    <id>http://vwkai.com/2019/02/18/redis-common-command/</id>
    <published>2019-02-18T12:21:15.000Z</published>
    <updated>2019-10-25T13:31:58.260Z</updated>
    
    <content type="html"><![CDATA[<p>Redis支持五种数据类型：字符串（String）、哈希（Hash）、列表（List）、集合（Set）、有序集合（sorted set）。</p><p>每一种数据类型所对应的操作命令不同，当然也存在一些通用的，而且Redis的所有命令有很多，本文中记录的都是日常使用频率相对多一些的。</p><p><strong>通用命令：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">keys：遍历所有key【O(n)】</span><br><span class="line">dbsize：计算key的总数【O(1)】</span><br><span class="line">exists：检查key是否存在;返回(integer) 1或(integer) 0【O(1)】</span><br><span class="line">del：删除指定的key-value【O(1)】</span><br><span class="line">expire：给key设置过期时间，在seconds秒后过期【O(1)】</span><br><span class="line">ttl：查看可以剩余的过期时间 ;返回(integer) -1：key存在但没有过期时间，(integer) -2 ：key不存在【O(1)】</span><br><span class="line">persist：去掉key的过期时间【O(1)】</span><br><span class="line">type：返回key的类型【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>O(n)代表时间复杂度比较高，不建议在线上使用，O(1)代表时间复杂度较低，可以任意使用</strong><br><a id="more"></a></p><h2 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a>字符串（String）</h2><ul><li>最常见的数据类型</li><li>可以为任何类型的字符串，比如二进制，json对象</li><li>最大容量512M</li></ul><p><strong>【增】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setnx key value：key不存在时，才设置【O(1)】</span><br><span class="line">set key value：不管key是否存在，都设置【O(1)】</span><br><span class="line">incr key：key自增1并返回结果【O(1)】</span><br><span class="line">decr key：key自减1并返回结果【O(1)】</span><br><span class="line">incrby key k：key自增k，并返回结果【O(1)】</span><br><span class="line">decrby key k：key自减k，并返回结果【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【删】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del key【0(N)】</span><br></pre></td></tr></table></figure></p><p><strong>【改】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set key value xx：key存在，才设置【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【查】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mget key1 key2 key3…：批量获取key，原子操作【O(n)】</span><br><span class="line">mset key1 value1 key2 value2 key3 value3：批量设置key-value【O(n)】</span><br></pre></td></tr></table></figure></p><p><strong>【知识扩展】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getset key newvalue：set key newvalue并返回旧的value【O(1)】</span><br><span class="line">append key value：将value追加到旧的value【O(1)】</span><br><span class="line">strlen key：返回字符串的长度（注意中文）【O(1)】</span><br><span class="line">incrbyfloat key 3.5：增加key对应的值3.5【O(1)】（没有decrbyfloat的命令，如果要减去，传负数即可）</span><br><span class="line">getrange key start end：获取字符串指定下标所有的值【O(1)】</span><br><span class="line">strange key index value：设置指定下标对应所有的值【O(1)】</span><br></pre></td></tr></table></figure></p><h2 id="哈希（Hash）"><a href="#哈希（Hash）" class="headerlink" title="哈希（Hash）"></a>哈希（Hash）</h2><ul><li>与php Array相似</li><li>可以保存多个key-value，每个k-v都是字符串类型</li><li>最多2^32-1个字段</li></ul><p><strong>所有hash的命令，都是以“h”开头</strong></p><p><strong>【增】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hsetnx key field value：设置hash key对应field的value,key不存在时才设置【O(1)】</span><br><span class="line">hincrby key field count：hash key对应的field增加count，并返回（如果要减去，传负数）【O(1)】</span><br><span class="line">hincrbyfloat key field count(浮点)：hash key对应的field增加count（浮点），并返回（如果要减去，传负数）【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【删】</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdel key field：删除hash key对应field的value【O(1)】</span><br></pre></td></tr></table></figure><p><strong>【改】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hset key field value：设置hash key对应field的value【O(1)】</span><br><span class="line">hmset key field1 value1 field2 value2 field3 value3..fieldN valueN：批量设置hash key的一批field value【O(N)】</span><br></pre></td></tr></table></figure></p><p><strong>【查】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hget key field：获取hash key对应的field的value【O(1)】</span><br><span class="line">hmget key field1 field2…fieldN：批量获取hash key的一批field对应的值【O(N)】</span><br><span class="line">hexists key field：判断hash key是否有field【O(1)】</span><br><span class="line">hlen key：获取hash key field的数量【O(1)】</span><br><span class="line">hgetall：获取hash key中所有的field和value【O(N)】（使用时需要注意redis时单线程，如果field比较多，性能会有影响）</span><br><span class="line">hvals key：返回hash key对应所有field的value【O(N)】</span><br><span class="line">hkeys key：返回hash key对应所有field【O(N)】</span><br></pre></td></tr></table></figure></p><h2 id="列表（List）"><a href="#列表（List）" class="headerlink" title="列表（List）"></a>列表（List）</h2><p><strong>【增】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpush key value1 value2 value3…valueN：从列表右端插入值（1-N个）【O(1~N)】</span><br><span class="line">lpush key value1 value2…valueN：从列表左端插入值（1～N个）【O(1~N)】</span><br><span class="line">linsert key before|after value newValue：在list指定的值前|后插入newValue【O(N)】</span><br></pre></td></tr></table></figure></p><p><strong>【删】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lpop key：从列表左侧弹出一个item【O(1)】</span><br><span class="line">rpop key：从列表右侧弹出一个item【O(1)】</span><br><span class="line">lrem key count value：根据count值，从列表中删除所有value相等的项【O(n)】</span><br><span class="line">（1）count&gt;0,从左到右，删除最多count个value相等的项目</span><br><span class="line">（2）count&lt;0,从右到左，删除最多Math.abs(count)个value相等的项</span><br><span class="line">（3）count=0,删除所有value相等的项</span><br><span class="line">ltrim key start end：按照索引范围修剪列表【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【改】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lset key index newValue：设置列表指定索引为newValue【O(n)】</span><br></pre></td></tr></table></figure></p><p><strong>【查】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lrange key start end(包含end)：获取列表指定索引范围所有item【O(N)】（start：0、end：-1 等于取所有的）</span><br><span class="line">lindex key index：获取列表指定索引的item【O(N)】</span><br><span class="line">llen key：获取列表长度【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【知识扩展】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blpop key timeout：lpop阻塞版本，timeout是阻塞超时时间，timeout=0时为永不阻塞【O(1)】</span><br><span class="line">brpop key timeout：rpop阻塞版本，timeout是阻塞超时时间，timeout=0时为永不阻塞【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【应用场景】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lpush + lpop = stack 实现栈的功能</span><br><span class="line">lpush + rpop = queue 实现队列功能</span><br><span class="line">lpush + ltrim = capped collection 实现有固定数量的列表</span><br><span class="line">lpush + brpop = message queue 实现消息队列功能</span><br><span class="line">llen + lpush = 可以实现秒杀场景</span><br></pre></td></tr></table></figure></p><h2 id="集合（Set）"><a href="#集合（Set）" class="headerlink" title="集合（Set）"></a>集合（Set）</h2><ul><li>集合中每个元素都是不同的</li><li>元素最多为2^32 - 1</li><li>元素没有顺序</li></ul><p><strong>特点：无序、无重复、支持集合间操作（交集、并集、差集）</strong></p><p><strong>所有集合的命令，都是以“s”开头</strong></p><p><strong>【增】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sadd key element：向集合key添加element（如果element已经存在，添加失败）【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【删】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">srem key element：将集合key中的element移除掉【O(1)】</span><br><span class="line">spop key：从集合中随机弹出一个元素</span><br></pre></td></tr></table></figure></p><p><strong>【查】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scard key：计算集合大小</span><br><span class="line">sismember key element：返回1存在,0不存在。判断element是否在集合中</span><br><span class="line">srandmember key count：从集合中随机挑count个元素</span><br><span class="line">smembers key：获取集合所有元素（无序，小心使用，如果集合数据过大， 会有线程阻塞风险）</span><br><span class="line">sdiff key1 key2：取两个集合的差集</span><br><span class="line">sinter key1 key2：取两个集合的交集</span><br><span class="line">sunion key1 key2：取两个集合的并集</span><br><span class="line">sdiff|sinter|sunion + store destkey ： 将差集、交集、并集的结果保存在destkey中</span><br></pre></td></tr></table></figure></p><p><strong>【应用场景】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sadd = tagging 实现标签的功能</span><br><span class="line">spop／srandmember = random item 常应用于随机数的一些场景</span><br><span class="line">sadd + sinter = social graph 常用语做一些社交相关的应用</span><br></pre></td></tr></table></figure></p><h2 id="有序集合（sorted-set）"><a href="#有序集合（sorted-set）" class="headerlink" title="有序集合（sorted set）"></a>有序集合（sorted set）</h2><p><strong>集合</strong> VS <strong>有序集合</strong> VS <strong>列表</strong></p><blockquote><p>集合：</p><blockquote><p>无重复元素<br>无序<br>element</p></blockquote></blockquote><blockquote><p>有序集合：</p><blockquote><p>无重复元素<br>有序<br>element + score</p></blockquote></blockquote><blockquote><p>列表：</p><blockquote><p>可以有重复元素<br>有序<br>element</p></blockquote></blockquote><p><strong>所有有序集合的命令，都是以“z”开头</strong></p><p><strong>【增】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zadd key score element（可以是多对）：添加score和element，score可以重复，element不可以重复【O(logN)】</span><br><span class="line">zincrby key incrScore element：增加或减少元素的分数【O(1)】</span><br></pre></td></tr></table></figure></p><p><strong>【删】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zrem key element(可以是多个)：删除元素【O(1)】</span><br><span class="line">zremrangebyrank key start end：删除指定排名内的升序元素【O(log(n)+m)】</span><br><span class="line">zremrangebyscore key minScore maxScore：删除指定分数内的升序元素【O(log(n)+m)】</span><br></pre></td></tr></table></figure></p><p><strong>【查】</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zscore key element：返回元素的分数【O(1)】</span><br><span class="line">zcard key：返回元素的个数【O(1)】</span><br><span class="line">zrange key start end [withscores]：返回指定索引范围内的升序元素[分值]【O(log(n)+m)】</span><br><span class="line">zrangebyscore key minScore maxScore [withscores]：返回指定分数范围内的升序元素[分值]【O(log(n)+m)】</span><br><span class="line">zcount key minScore maxScore：返回有序集合内在指定分数范围内的个数【O(log(n)+m)】</span><br></pre></td></tr></table></figure></p><p><strong><em>注：Redis的命令有很多，本文中记录的只是平时常用的一些命令。</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis支持五种数据类型：字符串（String）、哈希（Hash）、列表（List）、集合（Set）、有序集合（sorted set）。&lt;/p&gt;
&lt;p&gt;每一种数据类型所对应的操作命令不同，当然也存在一些通用的，而且Redis的所有命令有很多，本文中记录的都是日常使用频率相对多一些的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通用命令：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;keys：遍历所有key【O(n)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbsize：计算key的总数【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exists：检查key是否存在;返回(integer) 1或(integer) 0【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;del：删除指定的key-value【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expire：给key设置过期时间，在seconds秒后过期【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ttl：查看可以剩余的过期时间 ;返回(integer) -1：key存在但没有过期时间，(integer) -2 ：key不存在【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;persist：去掉key的过期时间【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type：返回key的类型【O(1)】&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;O(n)代表时间复杂度比较高，不建议在线上使用，O(1)代表时间复杂度较低，可以任意使用&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Redis" scheme="http://vwkai.com/categories/Redis/"/>
    
    
      <category term="Redis" scheme="http://vwkai.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>PHP写时复制 Copy On Write</title>
    <link href="http://vwkai.com/2019/02/17/php-copy-on-write/"/>
    <id>http://vwkai.com/2019/02/17/php-copy-on-write/</id>
    <published>2019-02-17T08:08:25.000Z</published>
    <updated>2019-10-25T13:31:58.260Z</updated>
    
    <content type="html"><![CDATA[<p>写时复制Copy on Write，也缩写为COW。</p><p><b>优点：省去了分配内存和管理内存地址的计算开销, 减少资源的占用</b></p><p>COW是常用的优化手段，可以归类于：资源延迟分配。只有在真正需要使用资源时才占用资源， 写时复制通常能减少资源的占用。</p><p>关于内存使用情况，可以使用php函数：memory_get_usage() 来进行查看</p><p>例子：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = range(<span class="number">0</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//系统会给$a开辟一块内存空间</span></span><br><span class="line">var_dump(memory_get_usage());</span><br><span class="line">$b = $a;</span><br><span class="line"><span class="comment">//此时$b也指向了$a的空间，两个变量共用一块内存空间</span></span><br><span class="line">var_dump(memory_get_usage());</span><br><span class="line">$a = range(<span class="number">0</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">//此时如果对$a或$b进行写操作时（不管值是否发生变化），会再拷贝一份新的空间出来 </span></span><br><span class="line">var_dump(memory_get_usage());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">执行结果为：</span><br><span class="line">int(455664)</span><br><span class="line">int(455696)</span><br><span class="line">int(525384)</span><br></pre></td></tr></table></figure><p>通过结果可以看出来，拷贝出新的内存空间后，内存占用量明显增加。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写时复制Copy on Write，也缩写为COW。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;优点：省去了分配内存和管理内存地址的计算开销, 减少资源的占用&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;COW是常用的优化手段，可以归类于：资源延迟分配。只有在真正需要使用资源时才占用资源， 写时复制通常能减少资源的占
      
    
    </summary>
    
      <category term="PHP" scheme="http://vwkai.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://vwkai.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>mysql设置数据库只读权限</title>
    <link href="http://vwkai.com/2019/01/15/mysql-set-readonly/"/>
    <id>http://vwkai.com/2019/01/15/mysql-set-readonly/</id>
    <published>2019-01-15T07:34:50.000Z</published>
    <updated>2019-10-25T13:31:58.259Z</updated>
    
    <content type="html"><![CDATA[<p>可以理解为开设一个账号，权限为只读</p><p>创建并授权用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT select ON *.* to &apos;test_readonly&apos;@&apos;localhost&apos; identified by &apos;1234&apos;;</span><br></pre></td></tr></table></figure><p>不必先insert into user…以后再进行授权，以上语句是创建用户的同时并且已授权</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以理解为开设一个账号，权限为只读&lt;/p&gt;
&lt;p&gt;创建并授权用户&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/
      
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>PHP魔术常量</title>
    <link href="http://vwkai.com/2018/12/30/php-magic-constants/"/>
    <id>http://vwkai.com/2018/12/30/php-magic-constants/</id>
    <published>2018-12-30T06:10:34.000Z</published>
    <updated>2019-10-25T13:31:58.260Z</updated>
    
    <content type="html"><![CDATA[<p>1、<strong>__METHOD__</strong>:返回所在类的方法的名称。与__FUNCTION__不用的是，__METHOD__返回的是”class::function”的形式，而__FUNCTION__返回”function”的形式。<br>2、<strong>__FILE__</strong>: 返回当前文件的完整路径。<br>3、<strong>__FUNCTION__</strong>:返回所在函数的名字。<br>4、<strong>__LINE__</strong>:返回文件中当前的行号。<br>5、<strong>__CLASS__</strong>:返回所在类的名字。<br>6、<strong>__DIR__</strong>:返回文件所在目录，如果用在被包含文件中，则返回被包含的文件所在的目录<br>7、<strong>__NAMESPACE__</strong>:返回当前命名空间的名称（区分大小写）。此常量是在编译时定义的。<br>8、<strong>__TRAIT__</strong>:返回Trait被定义时的名字。Trait名包含其被声明的作用区域。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、&lt;strong&gt;__METHOD__&lt;/strong&gt;:返回所在类的方法的名称。与__FUNCTION__不用的是，__METHOD__返回的是”class::function”的形式，而__FUNCTION__返回”function”的形式。&lt;br&gt;2、&lt;strong
      
    
    </summary>
    
      <category term="PHP" scheme="http://vwkai.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://vwkai.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>一台mysql服务器启动多个端口</title>
    <link href="http://vwkai.com/2018/08/07/mysql-multiple-port/"/>
    <id>http://vwkai.com/2018/08/07/mysql-multiple-port/</id>
    <published>2018-08-07T13:05:08.000Z</published>
    <updated>2019-10-25T13:31:58.259Z</updated>
    
    <content type="html"><![CDATA[<p>一、首先要先把my.cnf配置文件复制一份，开几个端口要复制几份，并且要重新命名。</p><p><code>cp /etc/my.cnf /etc/my3307.cnf</code></p><p>二、 修改/etc/my3307.cnf 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port            = 3307</span><br><span class="line">socket          = /tmp/mysql3307.sock</span><br><span class="line">default-character-set=UTF</span><br><span class="line">[mysqld]</span><br><span class="line">user            = root</span><br><span class="line">port            = 3307</span><br><span class="line">basedir         = /alidata/server/mysql</span><br><span class="line">datadir         = /alidata/server/mysql3307/data</span><br><span class="line">socket          = /tmp/mysql3307.sock</span><br><span class="line">log-error=/alidata/log/mysql3307/error.log</span><br></pre></td></tr></table></figure><p>三、创建数据库指定存放数据的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /alidata/server/mysql3307/data</span><br></pre></td></tr></table></figure><p>四、创建log日志存放目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /alidata/log/mysql3307/</span><br></pre></td></tr></table></figure><a id="more"></a><p>五、初始化数据库<br>进入到/alidata/server/mysql目录下，执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/scripts/mysql_install_db --defaults-extra-file=/etc/my3307.cnf</span><br></pre></td></tr></table></figure><p>执行这条命令后如果提示个别文件在/根目录下找不到的情况，例如：<br>fill_help_tables.sql，mysql_security_commands.sql，mysql_system_tables_data.sql，mysql_system_tables.sql<br>就把这些文件拷贝到根目录下</p><p>六、启动mysql，要指定.cnf文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/bin/mysqld_safe --defaults-extra-file=/etc/my3307.cnf  &amp;</span><br></pre></td></tr></table></figure><p>七、连接数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -S /tmp/mysql3307.sock -P 3307 使用这句命令进行连接</span><br></pre></td></tr></table></figure><p>但是可能会出现连接不上的情况<br>error: ‘Access denied for user ‘root‘@’localhost’ (using password: YES)’</p><p>解决方案： </p><p>1、停止数据库，杀掉mysql端口为3307的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ax | grep mysql</span><br><span class="line">kill 22139#找到相应的进程号</span><br></pre></td></tr></table></figure><p>2、启动时跳过授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/bin/mysqld_safe --defaults-extra-file=/etc/my3307.cnf --skip-grant-tables &amp;</span><br></pre></td></tr></table></figure><p>3、连接数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -S /tmp/mysql3307.sock -P 3307</span><br></pre></td></tr></table></figure><p>4、连接mysql后，对用户进行授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;root#mysql&apos; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p>但是在授权时，可能会提示错误<br>ERROR 1290 (HY000): The MySQL server is running with the –skip-grant-tables option so it cannot execute this statement</p><p>解决方法如下：</p><p>（1）执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>（2）再执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;root#mysql&apos; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p>就可以授权成功了</p><p>5、退出mysql后，在停掉mysql端口3307的数据库</p><p>6、重新执行启动命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/bin/mysqld_safe --defaults-extra-file=/etc/my3307.cnf  &amp;</span><br></pre></td></tr></table></figure><p>7、mysql 端口3307 数据库创建成功</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、首先要先把my.cnf配置文件复制一份，开几个端口要复制几份，并且要重新命名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp /etc/my.cnf /etc/my3307.cnf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;二、 修改/etc/my3307.cnf 配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[client]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port            = 3307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket          = /tmp/mysql3307.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-character-set=UTF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user            = root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port            = 3307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir         = /alidata/server/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir         = /alidata/server/mysql3307/data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket          = /tmp/mysql3307.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-error=/alidata/log/mysql3307/error.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三、创建数据库指定存放数据的目录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /alidata/server/mysql3307/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;四、创建log日志存放目录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /alidata/log/mysql3307/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ssh登录免密码</title>
    <link href="http://vwkai.com/2018/08/05/ssh-no-passwd/"/>
    <id>http://vwkai.com/2018/08/05/ssh-no-passwd/</id>
    <published>2018-08-05T09:47:48.000Z</published>
    <updated>2019-10-25T13:31:58.260Z</updated>
    
    <content type="html"><![CDATA[<p>A机器访问B机器无需密码登录</p><p>A机器：</p><pre><code>cd ~/.sshssh-keygen -t rsa</code></pre><p>B机器：</p><pre><code>cd ~/.sshvi authorized_keys  将A机器~/.ssh/id_rsa.pub文件中的内容复制过来</code></pre><p>做完以上操作后，A服务器登陆B服务器时无需密码<br><a id="more"></a><br><strong>SSH互信的原理:</strong><br>Master作为客户端，要实现无密码公钥认证，连接到服务器Salve上时，需要在Master上生成一个密钥对，包括一个公钥和一个私钥，而后将公钥复制到所有的Salve上。当Master通过SSH链接到Salve上时，Salve会生成一个随机数并用Master的公钥对随机数进行加密，并发送给Master。Master收到加密数之后再用私钥解密，并将解密数回传给Salve，Salve确认解密数无误之后就允许Master进行连接了。这就是一个公钥认证过程，期间不需要手工输入密码，重要的过程是将Master上产生的公钥复制到Salve上  互信的原理了解了，我们可以把配置ssh互信的步骤进行有效的分割。 </p><ol><li>在要配置互信的机器(web-1和web-2)上生成各自经过认证的key文件</li><li>将所有的key文件汇总到一个总的认证文件夹中 </li><li>将打包的key发给想要进行互信的机器(web-1,web-2) </li><li>互信的验证</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A机器访问B机器无需密码登录&lt;/p&gt;
&lt;p&gt;A机器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.ssh
ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;B机器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.ssh
vi authorized_keys  将A机器~/.ssh/id_rsa.pub文件中的内容复制过来
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;做完以上操作后，A服务器登陆B服务器时无需密码&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SSH" scheme="http://vwkai.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>从这里开始</title>
    <link href="http://vwkai.com/2018/08/01/start-here/"/>
    <id>http://vwkai.com/2018/08/01/start-here/</id>
    <published>2018-08-01T01:48:16.000Z</published>
    <updated>2019-10-25T13:31:58.260Z</updated>
    
    <content type="html"><![CDATA[<p>工作的时间不算短了，但其实想想对于业务和技术并没有非常系统的整理，比较碎片化，平日里遇到的一些问题和解决方案没有完全落实到纸面上，有时觉得记忆力还可以…但是终归好记性不如烂笔头，还是决定通过blog方式进行梳理和归纳，将这几年积累的下来经验和技术做一个很好的沉淀，也以此督促自己，不断的扩充自己的知识点，建立良好的技术体系。在这里会记录一些技术知识、心得感想等等。</p><p>嗯，就从这里开始。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工作的时间不算短了，但其实想想对于业务和技术并没有非常系统的整理，比较碎片化，平日里遇到的一些问题和解决方案没有完全落实到纸面上，有时觉得记忆力还可以…但是终归好记性不如烂笔头，还是决定通过blog方式进行梳理和归纳，将这几年积累的下来经验和技术做一个很好的沉淀，也以此督促
      
    
    </summary>
    
    
  </entry>
  
</feed>
