<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kai</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://vwkai.com/"/>
  <updated>2022-02-23T08:33:26.261Z</updated>
  <id>http://vwkai.com/</id>
  
  <author>
    <name>Kai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装maxwell并实现实时解析mysql的binlog日志</title>
    <link href="http://vwkai.com/2021/02/17/maxwell-kafka/"/>
    <id>http://vwkai.com/2021/02/17/maxwell-kafka/</id>
    <published>2021-02-17T14:25:24.000Z</published>
    <updated>2022-02-23T08:33:26.261Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开启mysql的binlog功能"><a href="#开启mysql的binlog功能" class="headerlink" title="开启mysql的binlog功能"></a>开启mysql的binlog功能</h3><p>第一步：修改配置文件：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/my.cnf</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">log-bin= /var/lib/mysql/mysql-bin</span><br><span class="line"></span><br><span class="line">binlog-format=ROW</span><br><span class="line"></span><br><span class="line">server_id=1</span><br></pre></td></tr></tbody></table></figure> <a id="more"></a><p><img src="/2021/02/17/maxwell-kafka/wpsZSVr5F.jpg" alt="img"> </p><p>第二步：重启mysql</p><p><img src="/2021/02/17/maxwell-kafka/wpsDLGf0G.jpg" alt="img"> </p><p>第三步：验证mysql是否开启binlog</p><p><img src="/2021/02/17/maxwell-kafka/wpsR1rkbM.jpg" alt="img"> </p><p>log_bin参数为ON，证明已开启binlog</p><p> 第四步：进入/var/lib/mysql目录，查看binlog日志文件</p><p><img src="/2021/02/17/maxwell-kafka/wpsKfVbuf.jpg" alt="img"> </p><h3 id="创建kafka的topic"><a href="#创建kafka的topic" class="headerlink" title="创建kafka的topic"></a>创建kafka的topic</h3><p>topic名称为max_kafka_topic</p><p><img src="/2021/02/17/maxwell-kafka/wpsLL0E7x.jpg" alt="img"> </p> <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create --partitions 3 --replication-factor 2 --topic max_kafka_topic --zookeeper node01:2181,node02:2181,node03:2181</span><br></pre></td></tr></tbody></table></figure><h3 id="安装、配置maxwell，实现实时解析mysql的binlog日志"><a href="#安装、配置maxwell，实现实时解析mysql的binlog日志" class="headerlink" title="安装、配置maxwell，实现实时解析mysql的binlog日志"></a>安装、配置maxwell，实现实时解析mysql的binlog日志</h3><p>第一步：添加mysql普通用户maxwell</p><p><img src="/2021/02/17/maxwell-kafka/wpszzeODm.jpg" alt="img"> </p><p>第二步：解压max-well安装包</p><p><img src="/2021/02/17/maxwell-kafka/wpshKsL3j.jpg" alt="img"> </p><p>第三步：修改maxwell配置文件</p><p><img src="/2021/02/17/maxwell-kafka/wpsJJONJf.jpg" alt="img"> </p><p><img src="/2021/02/17/maxwell-kafka/wpsByAHCY.jpg" alt="img"> </p><h3 id="启动maxwell并将采集的数据发送到kafka的topic中"><a href="#启动maxwell并将采集的数据发送到kafka的topic中" class="headerlink" title="启动maxwell并将采集的数据发送到kafka的topic中"></a>启动maxwell并将采集的数据发送到kafka的topic中</h3><p>第一步：启动maxwell</p><p><img src="/2021/02/17/maxwell-kafka/wps66jql5.jpg" alt="img"> </p><p><img src="/2021/02/17/maxwell-kafka/wpsNKdtXI.jpg" alt="img"> </p><p> 第二步：采集数据发送到kafka（向mysql中插入数据,maxwell会自动进行采集）</p><p><img src="/2021/02/17/maxwell-kafka/wps22iBdV.jpg" alt="img"> </p><h3 id="消费kafka数据，验证数据进入到kafka当中去了"><a href="#消费kafka数据，验证数据进入到kafka当中去了" class="headerlink" title="消费kafka数据，验证数据进入到kafka当中去了"></a>消费kafka数据，验证数据进入到kafka当中去了</h3><p><img src="/2021/02/17/maxwell-kafka/wps1yfF5N.jpg" alt="img"> </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;开启mysql的binlog功能&quot;&gt;&lt;a href=&quot;#开启mysql的binlog功能&quot; class=&quot;headerlink&quot; title=&quot;开启mysql的binlog功能&quot;&gt;&lt;/a&gt;开启mysql的binlog功能&lt;/h3&gt;&lt;p&gt;第一步：修改配置文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /etc/my.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;log-bin= /var/lib/mysql/mysql-bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;binlog-format=ROW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server_id=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Typora写hexo文章</title>
    <link href="http://vwkai.com/2020/12/18/Typora-hexo/"/>
    <id>http://vwkai.com/2020/12/18/Typora-hexo/</id>
    <published>2020-12-17T16:04:02.000Z</published>
    <updated>2020-12-26T16:53:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装hexo的hexo-asset-image这个插件后，可以在使用hexo new 创建文章时，自动创建一个与文章名字相同的目录，文章中所有插入的图片都可以放到这个目录下进行引用，但是在用的过程中发现有个蛋疼的问题就是，如果文章中图片比较多，手动将图片放到这个目录下，在文章中手动去引用它，会非常的麻烦…</p><p>解决这个问题试过两种方式：</p><p>1、<a href="/2020/12/16/hexo-admin/" title="hexo-admin">hexo-admin</a>：通过后台去维护文章并支持一键发布，图片可以在编辑文章时直接粘贴进去，图片会自动按照设定的路径存储。维护/发布文章方便，但是界面有点简陋..而且图片都上传到同一个目录下，并且直接把图片粘贴进文章中，有时图片并不显示，网上有些解决方案，但没仔细研究过。</p><p>2、Typora</p><p><img src="/2020/12/18/Typora-hexo/image-20201218000648068.png" alt="image-20201218000648068"></p><p>在文章中插入图片，按以上配置可以为图片自动创建相应目录，与hexo推荐的资源文件夹的方式不谋而合了（post_asset_folder），而且Typora写markdown文章非常方便，这个用起来感觉比hexo-admin要自然很多，并且也比较方便。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装hexo的hexo-asset-image这个插件后，可以在使用hexo new 创建文章时，自动创建一个与文章名字相同的目录，文章中所有插入的图片都可以放到这个目录下进行引用，但是在用的过程中发现有个蛋疼的问题就是，如果文章中图片比较多，手动将图片放到这个目录下，在文
      
    
    </summary>
    
      <category term="hexo" scheme="http://vwkai.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://vwkai.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo添加hexo-admin组件</title>
    <link href="http://vwkai.com/2020/12/16/hexo-admin/"/>
    <id>http://vwkai.com/2020/12/16/hexo-admin/</id>
    <published>2020-12-16T15:33:00.000Z</published>
    <updated>2022-02-23T07:38:12.947Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h5><p><a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener"><strong>hexo-admin</strong></a> 是一个Hexo博客引擎的管理用户界面插件。</p><h5 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h5><p>1、在hexo项目根目录下执行</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></tbody></table></figure><p>2、启动hexo-admin</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -d</span><br></pre></td></tr></tbody></table></figure><p>打开：<code>http://localhost:4000/admin</code></p><a id="more"></a><p><img src="/2020/12/16/hexo-admin/image-20201216234830222.png" alt="image-20201216234830222"></p><h5 id="三、密码保护"><a href="#三、密码保护" class="headerlink" title="三、密码保护"></a>三、密码保护</h5><p>如果在自己的服务器上使用hexo-admin，需要设置密码保护，否则其他人也可以操作后台，如果是发布到github上的就不需要了，因为部署到github上是静态文件，不存在这个问题。</p><p><img src="/2020/12/16/hexo-admin/image-20201216234919712.png" alt="image-20201216234919712"></p><p><img src="/2020/12/16/hexo-admin/image-20201217002312705.png" alt="image-20201217002312705"></p><p>输入用户名，密码，密钥，下面会自动生成配置代码，加到hexo项目根目录下的<code>_config.yml</code>中：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># hexo-admin authentification</span><br><span class="line">admin:</span><br><span class="line">  username: admin</span><br><span class="line">  password_hash: $2a$10$rbwfIulIXZnmZCPV3T1pbeICKPjYdOVynwfeJWfhw7k2SyFyCocxG</span><br><span class="line">  secret: a secret something</span><br></pre></td></tr></tbody></table></figure><p>重启hexo，再访问后台的话，就会进入登陆页面</p><p><img src="/2020/12/16/hexo-admin/image-20201217002528604.png" alt="image-20201217002528604"></p><h5 id="四、发布文章"><a href="#四、发布文章" class="headerlink" title="四、发布文章"></a>四、发布文章</h5><p><img src="/2020/12/16/hexo-admin/image-20201217002908570.png" alt="image-20201217002908570"></p><p>点击<code>Deploy</code>按钮，可以通过脚本直接发布到github上。但是在点击按钮之前，需要配置一下自动发布的脚本，进入到hexo项目的根目录下</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch  hexo-deploy.sh</span><br><span class="line"></span><br><span class="line">#脚本内容如下</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></tbody></table></figure><p>增加可执行权限</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x hexo-deploy.sh</span><br></pre></td></tr></tbody></table></figure><p>在_config.yml文件中加入添加：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">  deployCommand: ./hexo-deploy.sh</span><br></pre></td></tr></tbody></table></figure><p>点击<code>Deploy</code>按钮后，就可以自动发布到github上了。</p><p>以上是hexo-admin安装和主要的一些配置过程，还有其他的配置，例如配置图片路径等，比较简单，基本一配就懂。</p><p><code>hexo-admin已经用了一段时间，该篇就是将安装配置等过程再总结记录一下。</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jaredly/hexo-admin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;hexo-admin&lt;/strong&gt;&lt;/a&gt; 是一个Hexo博客引擎的管理用户界面插件。&lt;/p&gt;
&lt;h5 id=&quot;二、安装&quot;&gt;&lt;a href=&quot;#二、安装&quot; class=&quot;headerlink&quot; title=&quot;二、安装&quot;&gt;&lt;/a&gt;二、安装&lt;/h5&gt;&lt;p&gt;1、在hexo项目根目录下执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-admin --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、启动hexo-admin&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo server -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开：&lt;code&gt;http://localhost:4000/admin&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://vwkai.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://vwkai.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用iTerm2实现服务器之间文件的上传/下载</title>
    <link href="http://vwkai.com/2020/12/16/mac-iterm2-lrzsz/"/>
    <id>http://vwkai.com/2020/12/16/mac-iterm2-lrzsz/</id>
    <published>2020-12-16T13:59:42.000Z</published>
    <updated>2022-02-23T07:38:12.962Z</updated>
    
    <content type="html"><![CDATA[<p>将本地文件上传到服务器或者从服务器将文件下载到本地，通常有两种方式：一种是使用scp命令，另一种是通过客户端工具传输，在Mac下常用的工具是iTerm2。</p><h5 id="一、安装及配置的步骤"><a href="#一、安装及配置的步骤" class="headerlink" title="一、安装及配置的步骤"></a>一、安装及配置的步骤</h5><h6 id="1-安装lrzsz"><a href="#1-安装lrzsz" class="headerlink" title="1. 安装lrzsz"></a>1. 安装lrzsz</h6><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install lrzsz</span><br></pre></td></tr></tbody></table></figure><p>注意：有可能会一直卡在<code>Updating Homebrew...</code>上，这块有两种方式解决</p><p>（1）直接关闭brew每次执行命令时的自动更新（推荐）</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"># 新增一行</span><br><span class="line">export HOMEBREW_NO_AUTO_UPDATE=true</span><br></pre></td></tr></tbody></table></figure><p>（2）替换brew源（方法自行百度）</p><p>第二种替换源的方式操作了下，问题没解决，最后使用第一种方式简单粗暴的解决了。</p><h6 id="2-下载iterm2-zmodem"><a href="#2-下载iterm2-zmodem" class="headerlink" title="2. 下载iterm2-zmodem"></a>2. 下载iterm2-zmodem</h6><p>访问github上的<a href="https://github.com/aikuyun/iterm2-zmodem" target="_blank" rel="noopener">iterm2-zmodem</a></p><p>把<code>iterm2-send-zmodem.sh、iterm2-recv-zmodem.sh</code>下载下来，拷贝到<code>/usr/local/bin</code>文件夹中</p><p>添加权限</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x iterm2-recv-zmodem.sh</span><br><span class="line">chmod +x iterm2-send-zmodem.sh</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><h6 id="3-Term2-配置添加rz-sz功能"><a href="#3-Term2-配置添加rz-sz功能" class="headerlink" title="3. Term2 配置添加rz sz功能"></a>3. Term2 配置添加rz sz功能</h6><p>点击 iTerm2 的 Perference -&gt; Profiles -&gt; Advanced -&gt; Triggers 的 Edit 按钮</p><p><img src="/2020/12/16/mac-iterm2-lrzsz/image-20201216220423674.png" alt="image-20201216220423674"></p><p><img src="/2020/12/16/mac-iterm2-lrzsz/image-20201216220545592.png" alt="image-20201216220545592"></p><p>规则配置如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Regular expression: \*\*B0100</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/local/bin/iterm2-send-zmodem.sh</span><br><span class="line"></span><br><span class="line">Regular expression: \*\*B00000000000000</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/local/bin/iterm2-recv-zmodem.sh</span><br></pre></td></tr></tbody></table></figure><p><strong>注意：红框内的复选框要勾上</strong></p><h6 id="4-服务器安装lrzsz"><a href="#4-服务器安装lrzsz" class="headerlink" title="4. 服务器安装lrzsz"></a>4. 服务器安装lrzsz</h6><p>在远程服务器上安装lrzsz，CentOS:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install lrzsz</span><br></pre></td></tr></tbody></table></figure><p><strong>以上步骤执行完后，重启iTerm2</strong></p><h5 id="二、使用rz和sz命令"><a href="#二、使用rz和sz命令" class="headerlink" title="二、使用rz和sz命令"></a>二、使用rz和sz命令</h5><h6 id="1-文件上传"><a href="#1-文件上传" class="headerlink" title="1. 文件上传"></a>1. 文件上传</h6>   <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在远程服务器上执行rz命令即可</span><br><span class="line">rz</span><br></pre></td></tr></tbody></table></figure><h6 id="2-文件下载"><a href="#2-文件下载" class="headerlink" title="2. 文件下载"></a>2. 文件下载</h6>   <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在远程服务器上执行sz命令，后面跟上要下载的文件名称，可多个</span><br><span class="line">sz 文件1 文件2...</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将本地文件上传到服务器或者从服务器将文件下载到本地，通常有两种方式：一种是使用scp命令，另一种是通过客户端工具传输，在Mac下常用的工具是iTerm2。&lt;/p&gt;
&lt;h5 id=&quot;一、安装及配置的步骤&quot;&gt;&lt;a href=&quot;#一、安装及配置的步骤&quot; class=&quot;headerlink&quot; title=&quot;一、安装及配置的步骤&quot;&gt;&lt;/a&gt;一、安装及配置的步骤&lt;/h5&gt;&lt;h6 id=&quot;1-安装lrzsz&quot;&gt;&lt;a href=&quot;#1-安装lrzsz&quot; class=&quot;headerlink&quot; title=&quot;1. 安装lrzsz&quot;&gt;&lt;/a&gt;1. 安装lrzsz&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install lrzsz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：有可能会一直卡在&lt;code&gt;Updating Homebrew...&lt;/code&gt;上，这块有两种方式解决&lt;/p&gt;
&lt;p&gt;（1）直接关闭brew每次执行命令时的自动更新（推荐）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 新增一行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export HOMEBREW_NO_AUTO_UPDATE=true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）替换brew源（方法自行百度）&lt;/p&gt;
&lt;p&gt;第二种替换源的方式操作了下，问题没解决，最后使用第一种方式简单粗暴的解决了。&lt;/p&gt;
&lt;h6 id=&quot;2-下载iterm2-zmodem&quot;&gt;&lt;a href=&quot;#2-下载iterm2-zmodem&quot; class=&quot;headerlink&quot; title=&quot;2. 下载iterm2-zmodem&quot;&gt;&lt;/a&gt;2. 下载iterm2-zmodem&lt;/h6&gt;&lt;p&gt;访问github上的&lt;a href=&quot;https://github.com/aikuyun/iterm2-zmodem&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iterm2-zmodem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;iterm2-send-zmodem.sh、iterm2-recv-zmodem.sh&lt;/code&gt;下载下来，拷贝到&lt;code&gt;/usr/local/bin&lt;/code&gt;文件夹中&lt;/p&gt;
&lt;p&gt;添加权限&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chmod +x iterm2-recv-zmodem.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x iterm2-send-zmodem.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iTerm2" scheme="http://vwkai.com/categories/iTerm2/"/>
    
    
      <category term="iTerm2" scheme="http://vwkai.com/tags/iTerm2/"/>
    
  </entry>
  
  <entry>
    <title>ELK+Filebeat+Kafka日志收集</title>
    <link href="http://vwkai.com/2020/03/07/elk-filebeat-kafka/"/>
    <id>http://vwkai.com/2020/03/07/elk-filebeat-kafka/</id>
    <published>2020-03-07T15:40:31.000Z</published>
    <updated>2022-02-23T07:38:12.932Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>ELK分别代表Elasticsearch、Logstash、Kibana</p><p>Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</p><p>Logstash 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c/s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往elasticsearch上去。</p><p>Kibana 是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。</p><p>用ELK可以满足日志收集的需求，但是出于性能和效率的考虑，配合Filebeat和Kafka一起使用效果会更好一些。</p><p>Filebeat是一种日志数据采集器，基于Go语言，配置文件简单，占用很少的系统资源，Filebeat比Logstash更加轻量级，所以仅仅作为日志数据采集的工具，Filebeat是很好的选择。但它在数据的过滤筛选方面没有Logstash那么强大， 在将数据推到Elasticsearch中时如果希望对数据进行一些筛选过滤的处理，这时就需要配合Logstash一起使用。不过Logstash在短时间内处理大数据量的情况下资源消耗会很大，性能会下降，所以一般的做法会在Filebeat和Logstash中间加上一层Kafka消息队列来配合使用，起到一个缓冲和解耦的作用。Filebeat将收集到的日志数据推入到Kafka中，Logstash来进行消费，两边互不干预和影响。<br><a id="more"></a><br>下图为日志收集的流程图</p><p><img src="/2020/03/07/elk-filebeat-kafka/image.png" alt=""></p><h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><p>Elasticsearch、Logstash、Kibana、Kafka我并没有在服务器上进行源码搭建，而是采用的阿里云上现有的产品，当然它的产品是需要付费的，Kafka购买一个月如果是新会员有很大的优惠，其他的几款是因为有一个月的免费期，所以抓紧时间体验一把。</p><p>如果是自己搭建的环境，就是多花费一些时间，搭建好后，整体的使用流程都是一样的。</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h3><p>Kafka的环境我直接使用的阿里云的产品，也可以自行进行搭建，自己搭建的话需要安装Kafka和Zookeeper</p><p><img src="/2020/03/07/elk-filebeat-kafka/kafka1.jpg" alt=""></p><p><img src="/2020/03/07/elk-filebeat-kafka/kafka2.jpg" alt=""></p><p><img src="/2020/03/07/elk-filebeat-kafka/kafka3.jpg" alt=""></p><p><img src="/2020/03/07/elk-filebeat-kafka/kafka4.jpg" alt=""></p><h3 id="Filebeat"><a href="#Filebeat" class="headerlink" title="Filebeat"></a>Filebeat</h3><h4 id="1、下载（Download-Filebeat）"><a href="#1、下载（Download-Filebeat）" class="headerlink" title="1、下载（Download Filebeat）"></a>1、下载（<a href="https://www.elastic.co/cn/downloads/beats/filebeat" target="_blank" rel="noopener">Download Filebeat</a>）</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar zxf filebeat-7.6.0-linux-x86_64.tar.gz</span><br><span class="line">cd filebeat-7.6.0-linux-x86_64</span><br></pre></td></tr></tbody></table></figure><h4 id="2、修改配置（filebeat-yml）"><a href="#2、修改配置（filebeat-yml）" class="headerlink" title="2、修改配置（filebeat.yml）"></a>2、修改配置（filebeat.yml）</h4><p>配置文件中主要是配置input和output的内容，input代表要收集的数据是从哪来的（Nginx Log），output代表收集的数据要传到哪里去（Kafka）。</p><p>打开配置文件（filebeat.yml）后发现并没有Kafka相关的配置项，但在filebeat.reference.yml这个文件中有，所有先执行以下命令，将Kafka的配置项拷贝到filebeat.yml中<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n '1847,2000p' filebeat.reference.yml  &gt;&gt; filebeat.yml</span><br></pre></td></tr></tbody></table></figure><p></p><p>配置文件具体配置如下：<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###################### Filebeat Configuration Example #########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This file is an example configuration file highlighting only the most common</span></span><br><span class="line"><span class="comment"># options. The filebeat.reference.yml file from the same directory contains all the</span></span><br><span class="line"><span class="comment"># supported options with more comments. You can use it as a reference.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You can find the full configuration reference here:</span></span><br><span class="line"><span class="comment"># https://www.elastic.co/guide/en/beats/filebeat/index.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For more available modules and options, please see the filebeat.reference.yml sample</span></span><br><span class="line"><span class="comment"># configuration file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#=========================== Filebeat inputs =============================</span></span><br><span class="line"></span><br><span class="line"><span class="string">filebeat.inputs:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Each - is an input. Most options can be set at the input level, so</span></span><br><span class="line"><span class="comment"># you can use different inputs for various configurations.</span></span><br><span class="line"><span class="comment"># Below are the input specific configurations.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- type:</span> <span class="string">log</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Change to true to enable this input configuration.</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Paths that should be crawled and fetched. Glob based paths.</span></span><br><span class="line"><span class="attr">  paths:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/var/log/nginx/access.log</span></span><br><span class="line">    <span class="comment">#- c:\programdata\elasticsearch\logs\*</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Exclude lines. A list of regular expressions to match. It drops the lines that are</span></span><br><span class="line">  <span class="comment"># matching any regular expression from the list.</span></span><br><span class="line">  <span class="comment">#exclude_lines: ['^DBG']</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Include lines. A list of regular expressions to match. It exports the lines that are</span></span><br><span class="line">  <span class="comment"># matching any regular expression from the list.</span></span><br><span class="line">  <span class="comment">#include_lines: ['^ERR', '^WARN']</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Exclude files. A list of regular expressions to match. Filebeat drops the files that</span></span><br><span class="line">  <span class="comment"># are matching any regular expression from the list. By default, no files are dropped.</span></span><br><span class="line">  <span class="comment">#exclude_files: ['.gz$']</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Optional additional fields. These fields can be freely picked</span></span><br><span class="line">  <span class="comment"># to add additional information to the crawled log files for filtering</span></span><br><span class="line">  <span class="comment">#fields:</span></span><br><span class="line">  <span class="comment">#  level: debug</span></span><br><span class="line">  <span class="comment">#  review: 1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">### Multiline options</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Multiline can be used for log messages spanning multiple lines. This is common</span></span><br><span class="line">  <span class="comment"># for Java Stack Traces or C-Line Continuation</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The regexp Pattern that has to be matched. The example pattern matches all lines starting with [</span></span><br><span class="line">  <span class="comment">#multiline.pattern: ^\[</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Defines if the pattern set under pattern should be negated or not. Default is false.</span></span><br><span class="line">  <span class="comment">#multiline.negate: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Match can be set to "after" or "before". It is used to define if lines should be append to a pattern</span></span><br><span class="line">  <span class="comment"># that was (not) matched before or after or as long as a pattern is not matched based on negate.</span></span><br><span class="line">  <span class="comment"># <span class="doctag">Note:</span> After is the equivalent to previous and before is the equivalent to to next in Logstash</span></span><br><span class="line">  <span class="comment">#multiline.match: after</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#============================= Filebeat modules ===============================</span></span><br><span class="line"></span><br><span class="line"><span class="string">filebeat.config.modules:</span></span><br><span class="line">  <span class="comment"># Glob pattern for configuration loading</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">${path.config}/modules.d/*.yml</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Set to true to enable config reloading</span></span><br><span class="line">  <span class="string">reload.enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Period on which files under path should be checked for changes</span></span><br><span class="line">  <span class="comment">#reload.period: 10s</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==================== Elasticsearch template setting ==========================</span></span><br><span class="line"></span><br><span class="line"><span class="string">setup.template.settings:</span></span><br><span class="line">  <span class="string">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#index.codec: best_compression</span></span><br><span class="line">  <span class="comment">#_source.enabled: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#================================ General =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The name of the shipper that publishes the network data. It can be used to group</span></span><br><span class="line"><span class="comment"># all the transactions sent by a single shipper in the web interface.</span></span><br><span class="line"><span class="comment">#name:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The tags of the shipper are included in their own field with each</span></span><br><span class="line"><span class="comment"># transaction published.</span></span><br><span class="line"><span class="comment">#tags: ["service-X", "web-tier"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Optional fields that you can specify to add additional information to the</span></span><br><span class="line"><span class="comment"># output.</span></span><br><span class="line"><span class="comment">#fields:</span></span><br><span class="line"><span class="comment">#  env: staging</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#============================== Dashboards =====================================</span></span><br><span class="line"><span class="comment"># These settings control loading the sample dashboards to the Kibana index. Loading</span></span><br><span class="line"><span class="comment"># the dashboards is disabled by default and can be enabled either by setting the</span></span><br><span class="line"><span class="comment"># options here or by using the `setup` command.</span></span><br><span class="line"><span class="comment">#setup.dashboards.enabled: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The URL from where to download the dashboards archive. By default this URL</span></span><br><span class="line"><span class="comment"># has a value which is computed based on the Beat name and version. For released</span></span><br><span class="line"><span class="comment"># versions, this URL points to the dashboard archive on the artifacts.elastic.co</span></span><br><span class="line"><span class="comment"># website.</span></span><br><span class="line"><span class="comment">#setup.dashboards.url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#============================== Kibana =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.</span></span><br><span class="line"><span class="comment"># This requires a Kibana endpoint configuration.</span></span><br><span class="line"><span class="string">setup.kibana:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Kibana Host</span></span><br><span class="line">  <span class="comment"># Scheme and port can be left out and will be set to the default (http and 5601)</span></span><br><span class="line">  <span class="comment"># In case you specify and additional path, the scheme is required: http://localhost:5601/path</span></span><br><span class="line">  <span class="comment"># IPv6 addresses should always be defined as: https://[2001:db8::1]:5601</span></span><br><span class="line">  <span class="comment">#host: "localhost:5601"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Kibana Space ID</span></span><br><span class="line">  <span class="comment"># ID of the Kibana Space into which the dashboards should be loaded. By default,</span></span><br><span class="line">  <span class="comment"># the Default Space will be used.</span></span><br><span class="line">  <span class="comment">#space.id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#============================= Elastic Cloud ==================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These settings simplify using Filebeat with the Elastic Cloud (https://cloud.elastic.co/).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The cloud.id setting overwrites the `output.elasticsearch.hosts` and</span></span><br><span class="line"><span class="comment"># `setup.kibana.host` options.</span></span><br><span class="line"><span class="comment"># You can find the `cloud.id` in the Elastic Cloud web UI.</span></span><br><span class="line"><span class="comment">#cloud.id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The cloud.auth setting overwrites the `output.elasticsearch.username` and</span></span><br><span class="line"><span class="comment"># `output.elasticsearch.password` settings. The format is `&lt;user&gt;:&lt;pass&gt;`.</span></span><br><span class="line"><span class="comment">#cloud.auth:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#================================ Outputs =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure what output to use when sending the data collected by the beat.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------- Elasticsearch output ------------------------------</span></span><br><span class="line"><span class="comment">#output.elasticsearch:</span></span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line"><span class="comment">#  hosts: ["localhost:9200"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Protocol - either `http` (default) or `https`.</span></span><br><span class="line">  <span class="comment">#protocol: "https"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Authentication credentials - either API key or username/password.</span></span><br><span class="line">  <span class="comment">#api_key: "id:api_key"</span></span><br><span class="line">  <span class="comment">#username: "elastic"</span></span><br><span class="line">  <span class="comment">#password: "changeme"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------------- Logstash output --------------------------------</span></span><br><span class="line"><span class="comment">#output.logstash:</span></span><br><span class="line">  <span class="comment"># The Logstash hosts</span></span><br><span class="line">  <span class="comment">#hosts: ["localhost:5044"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Optional SSL. By default is off.</span></span><br><span class="line">  <span class="comment"># List of root certificates for HTTPS server verifications</span></span><br><span class="line">  <span class="comment">#ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Certificate for SSL client authentication</span></span><br><span class="line">  <span class="comment">#ssl.certificate: "/etc/pki/client/cert.pem"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Client Certificate Key</span></span><br><span class="line">  <span class="comment">#ssl.key: "/etc/pki/client/cert.key"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#================================ Processors =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure processors to enhance or manipulate events generated by the beat.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processors:</span></span><br><span class="line"><span class="attr">  - add_host_metadata:</span> <span class="string">~</span></span><br><span class="line"><span class="attr">  - add_cloud_metadata:</span> <span class="string">~</span></span><br><span class="line"><span class="attr">  - add_docker_metadata:</span> <span class="string">~</span></span><br><span class="line"><span class="attr">  - add_kubernetes_metadata:</span> <span class="string">~</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#================================ Logging =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sets log level. The default log level is info.</span></span><br><span class="line"><span class="comment"># Available log levels are: error, warning, info, debug</span></span><br><span class="line"><span class="comment">#logging.level: debug</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># At debug level, you can selectively enable logging only for some components.</span></span><br><span class="line"><span class="comment"># To enable all selectors use ["*"]. Examples of other selectors are "beat",</span></span><br><span class="line"><span class="comment"># "publish", "service".</span></span><br><span class="line"><span class="comment">#logging.selectors: ["*"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#============================== X-Pack Monitoring ===============================</span></span><br><span class="line"><span class="comment"># filebeat can export internal metrics to a central Elasticsearch monitoring</span></span><br><span class="line"><span class="comment"># cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The</span></span><br><span class="line"><span class="comment"># reporting is disabled by default.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set to true to enable the monitoring reporter.</span></span><br><span class="line"><span class="comment">#monitoring.enabled: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sets the UUID of the Elasticsearch cluster under which monitoring data for this</span></span><br><span class="line"><span class="comment"># Filebeat instance will appear in the Stack Monitoring UI. If output.elasticsearch</span></span><br><span class="line"><span class="comment"># is enabled, the UUID is derived from the Elasticsearch cluster referenced by output.elasticsearch.</span></span><br><span class="line"><span class="comment">#monitoring.cluster_uuid:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment to send the metrics to Elasticsearch. Most settings from the</span></span><br><span class="line"><span class="comment"># Elasticsearch output are accepted here as well.</span></span><br><span class="line"><span class="comment"># Note that the settings should point to your Elasticsearch *monitoring* cluster.</span></span><br><span class="line"><span class="comment"># Any setting that is not set is automatically inherited from the Elasticsearch</span></span><br><span class="line"><span class="comment"># output configuration, so if you have the Elasticsearch output configured such</span></span><br><span class="line"><span class="comment"># that it is pointing to your Elasticsearch monitoring cluster, you can simply</span></span><br><span class="line"><span class="comment"># uncomment the following line.</span></span><br><span class="line"><span class="comment">#monitoring.elasticsearch:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#================================= Migration ==================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This allows to enable 6.7 migration aliases</span></span><br><span class="line"><span class="comment">#migration.6_to_7.enabled: true</span></span><br><span class="line"><span class="comment">#------------------------------- Kafka output ----------------------------------</span></span><br><span class="line"><span class="string">output.kafka:</span></span><br><span class="line">  <span class="comment"># Boolean flag to enable or disable the output module.</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The list of Kafka broker addresses from which to fetch the cluster metadata.</span></span><br><span class="line">  <span class="comment"># The cluster metadata contain the actual Kafka brokers events are published</span></span><br><span class="line">  <span class="comment"># to.</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">["xxx.xx.xx.xxx:xxxx"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The Kafka topic used for produced events. The setting can be a format string</span></span><br><span class="line">  <span class="comment"># using any event field. To set the topic from document type use `%{[type]}`.</span></span><br><span class="line"><span class="attr">  topic:</span> <span class="string">web_log</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The Kafka event key setting. Use format string to create a unique event key.</span></span><br><span class="line">  <span class="comment"># By default no event key will be generated.</span></span><br><span class="line">  <span class="comment">#key: ''</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The Kafka event partitioning strategy. Default hashing strategy is `hash`</span></span><br><span class="line">  <span class="comment"># using the `output.kafka.key` setting or randomly distributes events if</span></span><br><span class="line">  <span class="comment"># `output.kafka.key` is not configured.</span></span><br><span class="line">  <span class="comment">#partition.hash:</span></span><br><span class="line">    <span class="comment"># If enabled, events will only be published to partitions with reachable</span></span><br><span class="line">    <span class="comment"># leaders. Default is false.</span></span><br><span class="line">    <span class="comment">#reachable_only: false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Configure alternative event field names used to compute the hash value.</span></span><br><span class="line">    <span class="comment"># If empty `output.kafka.key` setting will be used.</span></span><br><span class="line">    <span class="comment"># Default value is empty list.</span></span><br><span class="line">    <span class="comment">#hash: []</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Authentication details. Password is required if username is set.</span></span><br><span class="line">  <span class="comment">#username: ''</span></span><br><span class="line">  <span class="comment">#password: ''</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Kafka version Filebeat is assumed to run against. Defaults to the "1.0.0".</span></span><br><span class="line"><span class="attr">  version:</span> <span class="string">'0.10.2'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Configure JSON encoding</span></span><br><span class="line">  <span class="comment">#codec.json:</span></span><br><span class="line">    <span class="comment"># Pretty-print JSON event</span></span><br><span class="line">    <span class="comment">#pretty: false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Configure escaping HTML symbols in strings.</span></span><br><span class="line">    <span class="comment">#escape_html: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Metadata update configuration. Metadata contains leader information</span></span><br><span class="line">  <span class="comment"># used to decide which broker to use when publishing.</span></span><br><span class="line">  <span class="comment">#metadata:</span></span><br><span class="line">    <span class="comment"># Max metadata request retry attempts when cluster is in middle of leader</span></span><br><span class="line">    <span class="comment"># election. Defaults to 3 retries.</span></span><br><span class="line">    <span class="comment">#retry.max: 3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Wait time between retries during leader elections. Default is 250ms.</span></span><br><span class="line">    <span class="comment">#retry.backoff: 250ms</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Refresh metadata interval. Defaults to every 10 minutes.</span></span><br><span class="line">    <span class="comment">#refresh_frequency: 10m</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Strategy for fetching the topics metadata from the broker. Default is false.</span></span><br><span class="line">    <span class="comment">#full: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The number of concurrent load-balanced Kafka output workers.</span></span><br><span class="line">  <span class="comment">#worker: 1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The number of times to retry publishing an event after a publishing failure.</span></span><br><span class="line">  <span class="comment"># After the specified number of retries, events are typically dropped.</span></span><br><span class="line">  <span class="comment"># Some Beats, such as Filebeat, ignore the max_retries setting and retry until</span></span><br><span class="line">  <span class="comment"># all events are published.  Set max_retries to a value less than 0 to retry</span></span><br><span class="line">  <span class="comment"># until all events are published. The default is 3.</span></span><br><span class="line">  <span class="comment">#max_retries: 3</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The maximum number of events to bulk in a single Kafka request. The default</span></span><br><span class="line">  <span class="comment"># is 2048.</span></span><br><span class="line">  <span class="comment">#bulk_max_size: 2048</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Duration to wait before sending bulk Kafka request. 0 is no delay. The default</span></span><br><span class="line">  <span class="comment"># is 0.</span></span><br><span class="line">  <span class="comment">#bulk_flush_frequency: 0s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The number of seconds to wait for responses from the Kafka brokers before</span></span><br><span class="line">  <span class="comment"># timing out. The default is 30s.</span></span><br><span class="line">  <span class="comment">#timeout: 30s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The maximum duration a broker will wait for number of required ACKs. The</span></span><br><span class="line">  <span class="comment"># default is 10s.</span></span><br><span class="line">  <span class="comment">#broker_timeout: 10s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The number of messages buffered for each Kafka broker. The default is 256.</span></span><br><span class="line">  <span class="comment">#channel_buffer_size: 256</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The keep-alive period for an active network connection. If 0s, keep-alives</span></span><br><span class="line">  <span class="comment"># are disabled. The default is 0 seconds.</span></span><br><span class="line">  <span class="comment">#keep_alive: 0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sets the output compression codec. Must be one of none, snappy and gzip. The</span></span><br><span class="line">  <span class="comment"># default is gzip.</span></span><br><span class="line">  <span class="comment">#compression: gzip</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Set the compression level. Currently only gzip provides a compression level</span></span><br><span class="line">  <span class="comment"># between 0 and 9. The default value is chosen by the compression algorithm.</span></span><br><span class="line">  <span class="comment">#compression_level: 4</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The maximum permitted size of JSON-encoded messages. Bigger messages will be</span></span><br><span class="line">  <span class="comment"># dropped. The default value is 1000000 (bytes). This value should be equal to</span></span><br><span class="line">  <span class="comment"># or less than the broker's message.max.bytes.</span></span><br><span class="line">  <span class="comment">#max_message_bytes: 1000000</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The ACK reliability level required from broker. 0=no response, 1=wait for</span></span><br><span class="line">  <span class="comment"># local commit, -1=wait for all replicas to commit. The default is 1.  <span class="doctag">Note:</span></span></span><br><span class="line">  <span class="comment"># If set to 0, no ACKs are returned by Kafka. Messages might be lost silently</span></span><br><span class="line">  <span class="comment"># on error.</span></span><br><span class="line">  <span class="comment">#required_acks: 1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The configurable ClientID used for logging, debugging, and auditing</span></span><br><span class="line">  <span class="comment"># purposes.  The default is "beats".</span></span><br><span class="line">  <span class="comment">#client_id: beats</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Enable SSL support. SSL is automatically enabled if any SSL setting is set.</span></span><br><span class="line">  <span class="comment">#ssl.enabled: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Optional SSL configuration options. SSL is off by default.</span></span><br><span class="line">  <span class="comment"># List of root certificates for HTTPS server verifications</span></span><br><span class="line">  <span class="comment">#ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Configure SSL verification mode. If `none` is configured, all server hosts</span></span><br><span class="line">  <span class="comment"># and certificates will be accepted. In this mode, SSL based connections are</span></span><br><span class="line">  <span class="comment"># susceptible to man-in-the-middle attacks. Use only for testing. Default is</span></span><br><span class="line">  <span class="comment"># `full`.</span></span><br><span class="line">  <span class="comment">#ssl.verification_mode: full</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># List of supported/valid TLS versions. By default all TLS versions from 1.1</span></span><br><span class="line">  <span class="comment"># up to 1.3 are enabled.</span></span><br><span class="line">  <span class="comment">#ssl.supported_protocols: [TLSv1.1, TLSv1.2, TLSv1.3]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Certificate for SSL client authentication</span></span><br><span class="line">  <span class="comment">#ssl.certificate: "/etc/pki/client/cert.pem"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Client Certificate Key</span></span><br><span class="line">  <span class="comment">#ssl.key: "/etc/pki/client/cert.key"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Optional passphrase for decrypting the Certificate Key.</span></span><br><span class="line">  <span class="comment">#ssl.key_passphrase: ''</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Configure cipher suites to be used for SSL connections</span></span><br><span class="line">  <span class="comment">#ssl.cipher_suites: []</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Configure curve types for ECDHE-based cipher suites</span></span><br><span class="line">  <span class="comment">#ssl.curve_types: []</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Configure what types of renegotiation are supported. Valid options are</span></span><br><span class="line">  <span class="comment"># never, once, and freely. Default is never.</span></span><br><span class="line">  <span class="comment">#ssl.renegotiation: never</span></span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>注：</strong></p><ul><li><strong>Kafka output配置段中的hosts字段按真实环境中的填写</strong></li><li><strong>注释: “output.elasticsearch”,否则在启用时会报错(Exiting: error unpacking config data: more than one namespace configured accessing ‘output’ ….)</strong></li></ul><h4 id="3、启动"><a href="#3、启动" class="headerlink" title="3、启动"></a>3、启动</h4><p>（1）调试模式启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./filebeat -e -c filebeat.yml</span><br></pre></td></tr></tbody></table></figure><p>（2）后台守护进程启动<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./filebeat -e -c filebeat.yml &amp;</span><br></pre></td></tr></tbody></table></figure><p></p><p>启动后用ps命令查看一下，如果进程存在，则证明启动成功<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@kai www]# ps aux | grep filebeat</span><br><span class="line">root     28664  0.0  3.0 508724 30628 pts/0    Sl   10:37   0:00 ./filebeat -e -c filebeat.yml</span><br></pre></td></tr></tbody></table></figure><p></p><h4 id="4、验证"><a href="#4、验证" class="headerlink" title="4、验证"></a>4、验证</h4><p>需验证：数据采集是否成功<br>Filebeat启动方式：调试模式<br>目标：采集Nginx的访问日志，并推到指定的Kafka中</p><p>（1）访问网站页面，使得Nginx中有访问日志<br>（2）在调试模式下观察终端的输出数据，有以下输出说明Filebeat正在采集日志数据并往Kafka进行推送<br><img src="/2020/03/07/elk-filebeat-kafka/filebeat1.jpg" alt=""></p><p>（3）查看Kafka中的消息推入情况</p><p><img src="/2020/03/07/elk-filebeat-kafka/kafka5.jpg" alt=""></p><p>可以看到推送的消息，证明Filebeat的这一环已经ok了</p><h3 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h3><p><img src="/2020/03/07/elk-filebeat-kafka/logstash1.jpg" alt=""></p><p>配置文件内容如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">input {</span><br><span class="line">  kafka {</span><br><span class="line">    bootstrap_servers =&gt; [xxxxxxx]</span><br><span class="line">    client_id =&gt; "web_log_consumer"</span><br><span class="line">    auto_offset_reset =&gt; "latest"</span><br><span class="line">    consumer_threads =&gt; 5</span><br><span class="line">    decorate_events =&gt; true</span><br><span class="line">    topics =&gt; ["web_log"]</span><br><span class="line">    group_id =&gt; "web_log_consumer"</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">filter {</span><br><span class="line">  </span><br><span class="line">}</span><br><span class="line">output {</span><br><span class="line">  elasticsearch {</span><br><span class="line">    hosts =&gt; [xxxxxxx]</span><br><span class="line">    user =&gt; "elastic"</span><br><span class="line">    password =&gt; "xxxxx"</span><br><span class="line">    index =&gt; "nginx-access-log-%{+YYYY.MM.dd}"</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><p><img src="/2020/03/07/elk-filebeat-kafka/es1.jpg" alt=""><br>es的自动创建索引默认是关闭的，在测试环境下可以选择自动创建，但线上建议是手动创建索引，我在测试过程中选择的是自动创建。<br>可以在配置文件中开启自动创建索引的选项，语句如下：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action.auto_create_index: true</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h3><p><img src="/2020/03/07/elk-filebeat-kafka/kibana1.jpg" alt=""></p><h4 id="定义索引模式"><a href="#定义索引模式" class="headerlink" title="定义索引模式"></a>定义索引模式</h4><p><img src="/2020/03/07/elk-filebeat-kafka/kibana2.jpg" alt=""><br><img src="/2020/03/07/elk-filebeat-kafka/kibana3.jpg" alt=""></p><h4 id="查看日志数据"><a href="#查看日志数据" class="headerlink" title="查看日志数据"></a>查看日志数据</h4><p><img src="/2020/03/07/elk-filebeat-kafka/kibana4.jpg" alt=""><br>在Kibana的页面中可以看到网页的访问日志，到此整个日志收集的流程走完。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;ELK分别代表Elasticsearch、Logstash、Kibana&lt;/p&gt;
&lt;p&gt;Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。&lt;/p&gt;
&lt;p&gt;Logstash 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c/s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往elasticsearch上去。&lt;/p&gt;
&lt;p&gt;Kibana 是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。&lt;/p&gt;
&lt;p&gt;用ELK可以满足日志收集的需求，但是出于性能和效率的考虑，配合Filebeat和Kafka一起使用效果会更好一些。&lt;/p&gt;
&lt;p&gt;Filebeat是一种日志数据采集器，基于Go语言，配置文件简单，占用很少的系统资源，Filebeat比Logstash更加轻量级，所以仅仅作为日志数据采集的工具，Filebeat是很好的选择。但它在数据的过滤筛选方面没有Logstash那么强大， 在将数据推到Elasticsearch中时如果希望对数据进行一些筛选过滤的处理，这时就需要配合Logstash一起使用。不过Logstash在短时间内处理大数据量的情况下资源消耗会很大，性能会下降，所以一般的做法会在Filebeat和Logstash中间加上一层Kafka消息队列来配合使用，起到一个缓冲和解耦的作用。Filebeat将收集到的日志数据推入到Kafka中，Logstash来进行消费，两边互不干预和影响。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://vwkai.com/categories/ELK/"/>
    
      <category term="Kafka" scheme="http://vwkai.com/categories/ELK/Kafka/"/>
    
    
      <category term="ELK" scheme="http://vwkai.com/tags/ELK/"/>
    
      <category term="Filebeat" scheme="http://vwkai.com/tags/Filebeat/"/>
    
      <category term="Kafka" scheme="http://vwkai.com/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>hexo文章中使用emoji表情</title>
    <link href="http://vwkai.com/2020/03/05/hexo-emoji/"/>
    <id>http://vwkai.com/2020/03/05/hexo-emoji/</id>
    <published>2020-03-05T10:55:25.000Z</published>
    <updated>2022-02-23T07:38:12.962Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 默认使用的是 <a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a> 来渲染页面，这个渲染器不支持在文章中使用 emoji 表情。</p><p>可以利用 <a href="https://github.com/crimx/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 插件实现在文章添加emoji表情的功能</p><p>1、下载安装插件<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></tbody></table></figure><p></p><p>2、修改主目录下的_config.yml文件，启用插件<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">githubEmojis:</span><br><span class="line">  enable: true</span><br><span class="line">  className: github-emoji</span><br><span class="line">  inject: true</span><br><span class="line">  styles:</span><br><span class="line">  customEmojis:</span><br></pre></td></tr></tbody></table></figure><p></p><p>3、在<a href="https://www.einsition.com/tools/emoji-cheat-sheet" target="_blank" rel="noopener">emoji速查表</a>中找到想要添加的表情代码，添加到文章中即可，表情代码示例如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:blush:</span><br><span class="line">:thinking:</span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8">🤔</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f302.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f302.png?v8">🌂</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f989.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f989.png?v8">🦉</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f34e.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f34e.png?v8">🍎</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8">😅</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8">😍</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f916.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f916.png?v8">🤖</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo 默认使用的是 &lt;a href=&quot;https://github.com/hexojs/hexo-renderer-marked&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-renderer-marked&lt;/a&gt; 来渲染页面，这个渲染器不
      
    
    </summary>
    
      <category term="hexo" scheme="http://vwkai.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://vwkai.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>SpaceVim</title>
    <link href="http://vwkai.com/2020/02/24/vim-spacevim/"/>
    <id>http://vwkai.com/2020/02/24/vim-spacevim/</id>
    <published>2020-02-24T04:43:05.000Z</published>
    <updated>2022-02-23T07:38:12.975Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;用Vim写代码时经常会下载一些插件，让Vim的功能变得更丰富，用起来更加方便顺手，虽然总体比不上其他的IDE功能那么强大，但Vim的优势也是其他IDE无法比拟的。有很多人说如果下载很多插件把Vim整的像其他IDE功能那么多， 为何不直接用IDE去开发，这就仁者见仁，智者见智了。现在有大量的插件可以使用，但是下载一个插件，安装配置折腾半天，有时也整不顺手，使用效果不好，比较费时费力，弄的比较心累、崩溃…<br>&nbsp;&nbsp;&nbsp;&nbsp;在这过程中发现了一个模块化的Vim IDE——SpaceVim，以下是它的官方介绍</p><blockquote><p>SpaceVim 是一个社区驱动的模块化的 Vim IDE，以模块的方式组织管理插件以及相关配置， 为不同的语言开发量身定制了相关的开发模块，该模块提供代码自动补全， 语法检查、格式化、调试、REPL 等特性。用户仅需载入相关语言的模块即可得到一个开箱即用的 Vim IDE。</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;使用了一段时间发现还是非常方便的，省去了自己安装各种插件的时间，配置简单，可以对很多的编程语言进行单独的配置，并且不断有人在进行维护更新，相信以后功能支持会越来越强大。中文官网地址：<a href="https://spacevim.org/cn/" title="SpaceVim" target="_blank" rel="noopener">SpaceVim</a><br><a id="more"></a></p><h3 id="记录一下在使用SpaceVim时遇到的一些问题"><a href="#记录一下在使用SpaceVim时遇到的一些问题" class="headerlink" title="记录一下在使用SpaceVim时遇到的一些问题"></a>记录一下在使用SpaceVim时遇到的一些问题</h3><p>在安装好以后最初打开Vim时，发现编辑器的的状态栏还有tab等有图标的地方出现了乱码，显示“？”，查了一番发现是终端工具的字体没有安装好，终端工具使用的是ITerm2，如图：<br><img src="/2020/02/24/vim-spacevim/img1.png" style="zoom:80%;" align="left"><br><img src="/2020/02/24/vim-spacevim/img2.png" style="zoom:80%;" align="left"></p><p></p><div style="clear:both"></div><br>解决方法就是下载并安装相应字体，系统是macOS，直接使用brew进行下载<p></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap caskroom/fonts</span><br><span class="line">$ brew cask install font-hack-nerd-font</span><br></pre></td></tr></tbody></table></figure><p>如果brew命令半天无响应，可能是因为镜像源的问题，执行以下命令，修改为国内的镜像源<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 步骤一</span><br><span class="line">cd $(brew --repo)</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"> </span><br><span class="line"># 步骤二</span><br><span class="line">cd $(brew --repo)/Library/Taps/homebrew/homebrew-core</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class="line"> </span><br><span class="line">#步骤三</span><br><span class="line">brew update</span><br></pre></td></tr></tbody></table></figure><p></p><p>更新完后，再重新执行下载并安装字体的命令，就不会出现无响应的情况了</p><p>下载成功后，进入iTerm的配置界面，按照图中标明的进行配置<br><img src="/2020/02/24/vim-spacevim/img3.png" alt=""><br>配置完成后重启Iterm2工具，状态栏的位置上各种图标都已显示正常，效果如下：<br><img src="/2020/02/24/vim-spacevim/img4.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;用Vim写代码时经常会下载一些插件，让Vim的功能变得更丰富，用起来更加方便顺手，虽然总体比不上其他的IDE功能那么强大，但Vim的优势也是其他IDE无法比拟的。有很多人说如果下载很多插件把Vim整的像其他IDE功能那么多， 为何不直接用IDE去开发，这就仁者见仁，智者见智了。现在有大量的插件可以使用，但是下载一个插件，安装配置折腾半天，有时也整不顺手，使用效果不好，比较费时费力，弄的比较心累、崩溃…&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在这过程中发现了一个模块化的Vim IDE——SpaceVim，以下是它的官方介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SpaceVim 是一个社区驱动的模块化的 Vim IDE，以模块的方式组织管理插件以及相关配置， 为不同的语言开发量身定制了相关的开发模块，该模块提供代码自动补全， 语法检查、格式化、调试、REPL 等特性。用户仅需载入相关语言的模块即可得到一个开箱即用的 Vim IDE。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;使用了一段时间发现还是非常方便的，省去了自己安装各种插件的时间，配置简单，可以对很多的编程语言进行单独的配置，并且不断有人在进行维护更新，相信以后功能支持会越来越强大。中文官网地址：&lt;a href=&quot;https://spacevim.org/cn/&quot; title=&quot;SpaceVim&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SpaceVim&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vim" scheme="http://vwkai.com/categories/Vim/"/>
    
    
      <category term="Vim" scheme="http://vwkai.com/tags/Vim/"/>
    
      <category term="编辑器" scheme="http://vwkai.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Mac软件推荐</title>
    <link href="http://vwkai.com/2019/10/25/mac-tools/"/>
    <id>http://vwkai.com/2019/10/25/mac-tools/</id>
    <published>2019-10-25T15:53:53.000Z</published>
    <updated>2022-02-23T07:38:12.972Z</updated>
    
    <content type="html"><![CDATA[<p>以下是日常或工作中用到的一些工具（Mac端）： </p><ul><li>XMind：画思维脑图 </li><li>Sublime Text：代码编辑器</li><li>OmniPlan：项目管理 </li><li>Draw.io：绘图工具，画流程图很方便 ，也有Web端</li><li>Postman：模拟请求工具</li><li>Typora：Markdown工具，简洁、高效</li><li>iTerm2：终端工具 </li><li>Charles：抓包工具 </li><li>EverNote（印象笔记）：记录日常或工作笔记 </li><li>Sequel Pro：MySQL数据库管理工具</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下是日常或工作中用到的一些工具（Mac端）： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XMind：画思维脑图 &lt;/li&gt;
&lt;li&gt;Sublime Text：代码编辑器&lt;/li&gt;
&lt;li&gt;OmniPlan：项目管理 &lt;/li&gt;
&lt;li&gt;Draw.io：绘图工具，画流程图很方便 ，也有W
      
    
    </summary>
    
      <category term="Mac" scheme="http://vwkai.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://vwkai.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo插入图片的问题</title>
    <link href="http://vwkai.com/2019/10/25/hexo-images/"/>
    <id>http://vwkai.com/2019/10/25/hexo-images/</id>
    <published>2019-10-25T05:09:43.000Z</published>
    <updated>2022-02-23T07:38:12.962Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现hexo在文章中插入图片的时候有点麻烦，查了一下发现还是有很简洁的方法的，总结一下自己试过的几种方式：</p><h3 id="本地图片引用（自动生成目录）"><a href="#本地图片引用（自动生成目录）" class="headerlink" title="本地图片引用（自动生成目录）"></a>本地图片引用（自动生成目录）</h3><ul><li>将配置文件_config.yml里面的post_asset_folder字段修改为true</li><li>在Hexo主目录下执行：<code>npm install hexo-asset-image --save</code>，这是下载安装一个可以上传本地图片的插件</li><li>插件安装完毕后，在建立新的文章时，如<code>hexo new test_image</code>，在<code>source/_posts/</code>目录下除了会生成“test_image.md”以外，还会生成一个与文章标题相同的目录(source/_posts/test_image/)，这个目录就是存放文章内图片的地方</li><li>在编写文章时，先将图片放到相应的同名目录下，在文章中按markdown语法进行引用，注意此处是<font color="red">相对路径</font>，例如：<code>![](test_image/image-1.png)</code></li></ul><a id="more"></a><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>每个文章中的图片单独存放，并且图片目录会自动生成，方便图片的管理与查找</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>文章目录(source/_post/)日积月累会变得很大，里面既有文章又有图片目录，稍显乱一些</li><li>图片要先拷贝到相应的图片目录下，做好图片命名，然后在文章中引入，图片少还ok，图片多的话感觉会比较繁琐</li><li>图片复用不是很方便</li></ul><p>目前我自己的文章中图片不是很多，所以采用的还是这种方式。</p><h3 id="本地图片引用（手动生成目录）"><a href="#本地图片引用（手动生成目录）" class="headerlink" title="本地图片引用（手动生成目录）"></a>本地图片引用（手动生成目录）</h3><p>如果想对图片进行统一管理，可以单独创建一个图片目录，将所有的图片都放到一起，在source目录下创建一个images的目录<code>source/images</code>，在文章中进行引用的时候，要写<font color="red">绝对路径</font>，例如：<code>![](/images/image-1.png)</code></p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ul><li>所有的文章图片在公共目录统一进行存放和管理，不会弄乱文章目录，图片复用方便</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ul><li>图片目录会变得非常大，如果想按文章细分目录保存的话，需要手动创建目录</li><li>与上一个方法有同样的问题，如果文章中的图片较多，引入时会麻烦一些</li></ul><h3 id="远程图片引用"><a href="#远程图片引用" class="headerlink" title="远程图片引用"></a>远程图片引用</h3><p>推荐这种方式，前两种方式都是本地存储，这一种方式是放到图片服务商的服务器当中，也就是所说的图床，国内比较好的有七牛云，微博，腾讯云等等，推荐一个app：IPic（<a href="https://itunes.apple.com/cn/app/id1101244278?mt=12" target="_blank" rel="noopener">下载地址</a>），可以直接将图片上传到图床当中，并自动生成markdown地址，在文章中直接引用，试了试用起来真的很爽，哈哈哈。IPic目前上传到微博是完全免费的，上传其他的服务商app需要解锁付费使用（有个免费试用期）。</p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ul><li>图片是上传到服务商，不占用自己的本地空间</li><li>图片服务商会对图片加载做优化，访问速度会比较快</li><li>通过像IPic这样的app进行上传并自动生成好markdown地址，非常的方便、简单，比自己去本地管理图片要方便很多。</li></ul><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ul><li>如果服务商挂了，图片访问也就跟着挂了（可能性极低）</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现hexo在文章中插入图片的时候有点麻烦，查了一下发现还是有很简洁的方法的，总结一下自己试过的几种方式：&lt;/p&gt;
&lt;h3 id=&quot;本地图片引用（自动生成目录）&quot;&gt;&lt;a href=&quot;#本地图片引用（自动生成目录）&quot; class=&quot;headerlink&quot; title=&quot;本地图片引用（自动生成目录）&quot;&gt;&lt;/a&gt;本地图片引用（自动生成目录）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将配置文件_config.yml里面的post_asset_folder字段修改为true&lt;/li&gt;
&lt;li&gt;在Hexo主目录下执行：&lt;code&gt;npm install hexo-asset-image --save&lt;/code&gt;，这是下载安装一个可以上传本地图片的插件&lt;/li&gt;
&lt;li&gt;插件安装完毕后，在建立新的文章时，如&lt;code&gt;hexo new test_image&lt;/code&gt;，在&lt;code&gt;source/_posts/&lt;/code&gt;目录下除了会生成“test_image.md”以外，还会生成一个与文章标题相同的目录(source/_posts/test_image/)，这个目录就是存放文章内图片的地方&lt;/li&gt;
&lt;li&gt;在编写文章时，先将图片放到相应的同名目录下，在文章中按markdown语法进行引用，注意此处是&lt;font color=&quot;red&quot;&gt;相对路径&lt;/font&gt;，例如：&lt;code&gt;![](test_image/image-1.png)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://vwkai.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://vwkai.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MySQL事务</title>
    <link href="http://vwkai.com/2019/09/06/mysql-transaction/"/>
    <id>http://vwkai.com/2019/09/06/mysql-transaction/</id>
    <published>2019-09-06T13:19:12.000Z</published>
    <updated>2022-02-23T07:38:12.974Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、事务的基本要素（ACID）"><a href="#一、事务的基本要素（ACID）" class="headerlink" title="一、事务的基本要素（ACID）"></a>一、事务的基本要素（ACID）</h4><p>1、原子性（Atomicity）：事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。<br>2、一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。<br>3、隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。<br>4、持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。</p><a id="more"></a><h4 id="二、事务的并发问题"><a href="#二、事务的并发问题" class="headerlink" title="二、事务的并发问题"></a>二、事务的并发问题</h4><p>1、脏读：事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据<br>2、不可重复读：事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致。<br>3、幻读：</p><ul><li>事务A对数据进行查询，发现数据并不存在，准备执行insert操作，此时事务B在事务A执行插入之前进行了insert，并提交事务，此时事务A再执行insert的时候会发生报错，这种查询的时候明明没有，插入却提示已经存在的现象。</li><li>事务A对数据进行查询，如果同时事务B插入了新数据并提交，事务A再更新时，就会“惊奇的”发现了这些新数据，貌似之前读到的数据是“鬼影”一样的幻觉。</li><li>事务A对数据进行查询，如果同时事务B删除了某条数据并提交，但事务A并不知道数据已被删除，去修改被删除的数据时，发现无法更新成功。</li></ul><p>4、更新丢失：两个事务在并发下同时进行更新，后一个事务的更新覆盖了前一个事务更新的情况，<font color="red">更新丢失是数据没有保证一致性导致的</font>。比如，事务A 修改了一条记录，事务B 在 事务A 提交的同时也进行了一次修改并且提交。当事务A查询的时候，会发现刚才修改的内容没有被修改，好像丢失了更新。</p><p>解决方案：<br>脏读和不可重复读，通过调整事务隔离级别即可解决，在可重复读的隔离级别下产生的幻读问题，可以通过间歇锁的方式解决，更新丢失可以通过乐观锁或排他锁解决。<br><mark><a href="/2019/08/25/mysql-lock/" title="MySQL锁机制">MySQL锁机制</a></mark></p><h4 id="三、事务的实现方式"><a href="#三、事务的实现方式" class="headerlink" title="三、事务的实现方式"></a>三、事务的实现方式</h4><table><thead><tr><th>特征</th><th>InnoDB实现方式</th></tr></thead><tbody><tr><td>原子性（A）</td><td>回滚日志（Undo Log）：用于记录数据修改前的状态</td></tr><tr><td>一致性（C）</td><td>重做日志（Redo Log）：用于记录数据修改后的状态</td></tr><tr><td>隔离性（I）</td><td>锁：用于资源隔离，分为共享锁和排他锁</td></tr><tr><td>持久性（D）</td><td>重做日志（Redo Log）+ 回滚日志（Undo Log）</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、事务的基本要素（ACID）&quot;&gt;&lt;a href=&quot;#一、事务的基本要素（ACID）&quot; class=&quot;headerlink&quot; title=&quot;一、事务的基本要素（ACID）&quot;&gt;&lt;/a&gt;一、事务的基本要素（ACID）&lt;/h4&gt;&lt;p&gt;1、原子性（Atomicity）：事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。&lt;br&gt;2、一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。&lt;br&gt;3、隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。&lt;br&gt;4、持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL行锁定测试</title>
    <link href="http://vwkai.com/2019/08/26/mysql-lock-rowlock-test/"/>
    <id>http://vwkai.com/2019/08/26/mysql-lock-rowlock-test/</id>
    <published>2019-08-26T01:42:36.000Z</published>
    <updated>2022-02-23T08:14:11.230Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##准备测试数据</span><br><span class="line">create table locktest(id int primary key,col1 int,index(col1));</span><br><span class="line">insert into locktest values(1,10);</span><br><span class="line">insert into locktest values(2,20);</span><br><span class="line">insert into locktest values(3,30);</span><br><span class="line">insert into locktest values(4,40);</span><br><span class="line">insert into locktest values(5,50);</span><br></pre></td></tr></tbody></table></figure><h2 id="非唯一索引"><a href="#非唯一索引" class="headerlink" title="非唯一索引"></a>非唯一索引</h2><h3 id="范围查询，临键锁（一）"><a href="#范围查询，临键锁（一）" class="headerlink" title="范围查询，临键锁（一）"></a>范围查询，临键锁（一）</h3><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 30 and col1 &lt; 50 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  4 |   40 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">##col1为20时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,20);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为30时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,30);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为49时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,49);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(16,50);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为51时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(18,51);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为19时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(17,19);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为20时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></tbody></table></figure><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、40、50</td></tr><tr><td>查询条件</td><td>&gt; 30 and &lt; 50</td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(20，40]、(40，50]</td></tr><tr><td>记录锁</td><td>40，50</td></tr></tbody></table><a id="more"></a><h3 id="范围查询，临键锁（二）"><a href="#范围查询，临键锁（二）" class="headerlink" title="范围查询，临键锁（二）"></a>范围查询，临键锁（二）</h3><h4 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 30 and col1 &lt; 50;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  4 |   40 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为29时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,29);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,30);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为49时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,49);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,50);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为51时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,51);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1 = 30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1 = 40;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1 = 50;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 30 and &lt; 50</td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(30，40]、(40，50]</td></tr><tr><td>记录锁</td><td>40，50</td></tr></tbody></table><h3 id="范围查询，临键锁（三）"><a href="#范围查询，临键锁（三）" class="headerlink" title="范围查询，临键锁（三）"></a>范围查询，临键锁（三）</h3><h4 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt;  select * from locktest where col1 &lt; 30 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">+----+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select  * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(9,30);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,31);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为40时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,40);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为29时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,29);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为5时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,5);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为1时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,1);</span><br><span class="line">c^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为30时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为20时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 2  Changed: 0  Warnings: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-2"><a href="#结论-2" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&lt; 30 </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(-∞，10]、(10，20]、(20，30]</td></tr><tr><td>记录锁</td><td>10，20，30</td></tr></tbody></table><h3 id="范围查询，临键锁（四）"><a href="#范围查询，临键锁（四）" class="headerlink" title="范围查询，临键锁（四）"></a>范围查询，临键锁（四）</h3><h4 id="举例-3"><a href="#举例-3" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  select * from locktest where col1 &gt; 40 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为35时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,35);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">##col1为39时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,39);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,40);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,41);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为51时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,51);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为50时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-3"><a href="#结论-3" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 40 </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(40，50]，(50，∞]</td></tr><tr><td>记录锁</td><td>50</td></tr></tbody></table><h3 id="范围查询，间歇锁"><a href="#范围查询，间歇锁" class="headerlink" title="范围查询，间歇锁"></a>范围查询，间歇锁</h3><h4 id="举例-4"><a href="#举例-4" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 50 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为50时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为45时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,45);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为51时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,51);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为60时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,60);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-4"><a href="#结论-4" class="headerlink" title="结论"></a>结论</h4><table><tbody><tr><th>列</th><th>值</th><th>扩展</th></tr><tr><td>数据（col1）</td><td>10、20、30、40、50</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 50</td><td>&gt;=50</td></tr><tr><td>锁类型</td><td>GAP锁</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(50，∞)</td><td>(50，∞]</td></tr><tr><td>记录锁</td><td>无</td><td>50</td></tr><tr><td>备注</td><td colspan="2"><mark>唯一索引/主键索引在这个场景下与非唯一索引的结论一致</mark></td></tr></tbody></table><h3 id="范围查询，临键锁（五）"><a href="#范围查询，临键锁（五）" class="headerlink" title="范围查询，临键锁（五）"></a>范围查询，临键锁（五）</h3><h4 id="举例-5"><a href="#举例-5" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 &lt; 10 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为11时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,11);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为25时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,25);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为9时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,9);</span><br><span class="line">c^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为1时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,1);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为10时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where col1=10;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为20时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-5"><a href="#结论-5" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&lt; 10 </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(-∞，10]</td></tr><tr><td>记录锁</td><td>10</td></tr><tr><td>备注</td><td><mark>唯一索引/主键索引在这个场景下与非唯一索引的结论一致</mark></td></tr></tbody></table><h3 id="等值查询，临键锁"><a href="#等值查询，临键锁" class="headerlink" title="等值查询，临键锁"></a>等值查询，临键锁</h3><h4 id="举例-6"><a href="#举例-6" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 = 30 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  3 |   30 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为20时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=20 where col1=20;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为29时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,29);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为21时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(9,21);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为19时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(8,19);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,31);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为39时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,39);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(10,41);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-6"><a href="#结论-6" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>= 30  </td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(20，30]、 (30，40)<font color="red">注意此处是小括号，40不加锁，属于GAP锁</font></td></tr><tr><td>记录锁</td><td>30</td></tr></tbody></table><h3 id="等值查询，间歇锁"><a href="#等值查询，间歇锁" class="headerlink" title="等值查询，间歇锁"></a>等值查询，间歇锁</h3><h4 id="举例-7"><a href="#举例-7" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where col1 = 35 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,31);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为29时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,29);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为39时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,39);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(7,41);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-7"><a href="#结论-7" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>= 35</td></tr><tr><td>锁类型</td><td>Gap锁</td></tr><tr><td>加锁区间</td><td>（30，40）</td></tr><tr><td>记录锁</td><td>无</td></tr></tbody></table><h3 id="范围查询，临键锁（六）"><a href="#范围查询，临键锁（六）" class="headerlink" title="范围查询，临键锁（六）"></a>范围查询，临键锁（六）</h3><h4 id="举例-8"><a href="#举例-8" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; select * from locktest where col1 &gt; 31 and col1 &lt; 36 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">+----+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为31时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,31);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为35时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,35);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为39时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,39);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为41时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,41);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##col1为30时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=30 where col1=30;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">##col1为40时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=40 where col1=40;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##col1为50时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=50 where col1=50;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 0  Warnings: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-8"><a href="#结论-8" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（col1）</td><td>10、20、30、40、50</td></tr><tr><td>查询条件</td><td>&gt; 31 and &lt; 36</td></tr><tr><td>锁类型</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>（30，40]</td></tr><tr><td>记录锁</td><td>40</td></tr></tbody></table><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#多增加一些数据，方便唯一索引的测试</span><br><span class="line">insert into locktest values(10,60);</span><br><span class="line">insert into locktest values(15,70);</span><br><span class="line">insert into locktest values(20,80);</span><br><span class="line">insert into locktest values(25,90);</span><br><span class="line">insert into locktest values(30,100);</span><br></pre></td></tr></tbody></table></figure><h2 id="唯一索引-主键索引"><a href="#唯一索引-主键索引" class="headerlink" title="唯一索引/主键索引"></a>唯一索引/主键索引</h2><h3 id="等值查询，记录锁"><a href="#等值查询，记录锁" class="headerlink" title="等值查询，记录锁"></a>等值查询，记录锁</h3><h4 id="举例-9"><a href="#举例-9" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where id = 10 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">| 10 |   60 |</span><br><span class="line">+----+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">| 20 |   80 |</span><br><span class="line">| 25 |   90 |</span><br><span class="line">| 30 |  100 |</span><br><span class="line">+----+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为10时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 10;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为5时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为15时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 15;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为9时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(9,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为13时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(13,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-9"><a href="#结论-9" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（id）</td><td>1、2、3、4、5、10、15、20、25、30</td></tr><tr><td>查询条件</td><td>= 10</td></tr><tr><td>锁类型</td><td>记录锁</td></tr><tr><td>加锁区间</td><td>无</td></tr><tr><td>记录锁</td><td>10</td></tr></tbody></table><h3 id="等值查询，间歇锁-1"><a href="#等值查询，间歇锁-1" class="headerlink" title="等值查询，间歇锁"></a>等值查询，间歇锁</h3><h4 id="举例-10"><a href="#举例-10" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest where id = 7 for update;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">| 20 |   80 |</span><br><span class="line">| 25 |   90 |</span><br><span class="line">| 30 |  100 |</span><br><span class="line">+----+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为5时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为10时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 10;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为6时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,10);</span><br><span class="line">C^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为11时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(11,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-10"><a href="#结论-10" class="headerlink" title="结论"></a>结论</h4><table><thead><tr><th>列</th><th>值</th></tr></thead><tbody><tr><td>数据（id）</td><td>1、2、3、4、5、10、15、20、25、30</td></tr><tr><td>查询条件</td><td>= 7</td></tr><tr><td>锁类型</td><td>Gap锁</td></tr><tr><td>加锁区间</td><td>（5，10）</td></tr><tr><td>记录锁</td><td>10</td></tr><tr><td>备注</td><td><mark>条件是唯一索引/主键索引，做等值查询，数据不存在时，变为Gap锁</mark></td></tr></tbody></table><h3 id="范围查询，临键锁"><a href="#范围查询，临键锁" class="headerlink" title="范围查询，临键锁"></a>范围查询，临键锁</h3><h4 id="举例-11"><a href="#举例-11" class="headerlink" title="举例"></a>举例</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#事务A</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt;  select * from locktest where id &gt; 6 and id &lt; 18 for update;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">+----+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#事务B</span><br><span class="line">mysql&gt; begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from locktest;</span><br><span class="line">+----+------+</span><br><span class="line">| id | col1 |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |   10 |</span><br><span class="line">|  2 |   20 |</span><br><span class="line">|  3 |   30 |</span><br><span class="line">|  4 |   40 |</span><br><span class="line">|  5 |   50 |</span><br><span class="line">| 10 |   60 |</span><br><span class="line">| 15 |   70 |</span><br><span class="line">| 20 |   80 |</span><br><span class="line">| 25 |   90 |</span><br><span class="line">| 30 |  100 |</span><br><span class="line">+----+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id为5时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为10时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 10;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为15时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 15;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为20时更新，发生阻塞，更新失败</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 20;</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为25时更新，没有发生阻塞，更新成功</span><br><span class="line">mysql&gt; update locktest set col1=10 where id = 25;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">##id为6时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(6,10);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为19时插入，发生阻塞，插入失败</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(19,10);</span><br><span class="line">^C^C -- query aborted</span><br><span class="line">ERROR 1317 (70100): Query execution was interrupted</span><br><span class="line"></span><br><span class="line">##id为21时插入，没有发生阻塞，插入成功</span><br><span class="line">mysql&gt; insert into locktest(id,col1) values(21,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><h4 id="结论-11"><a href="#结论-11" class="headerlink" title="结论"></a>结论</h4><table><tbody><tr><th>列</th><th>值</th><th>扩展</th></tr><tr><td>数据（id）</td><td>1、2、3、4、5、10、15、20、25、30</td><td>1、2、3、4、5、10、15、20、25、30</td></tr><tr><td>查询条件</td><td>&gt; 6 and  &lt; 18</td><td>&gt; 16 and  &lt; 19</td></tr><tr><td>锁类型</td><td>临键锁</td><td>临键锁</td></tr><tr><td>加锁区间</td><td>(5，10]，(10，15]、(15，20]</td><td>(15，20]</td></tr><tr><td>记录锁</td><td>10、15、20</td><td>20</td></tr><tr><td>备注</td><td colspan="2"><mark>条件是唯一索引/主键索引，做范围查询时，变为临键锁（查询结果有数据或者没有数据，都会变为临键锁）</mark></td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;##准备测试数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create table locktest(id int primary key,col1 int,index(col1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(1,10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(2,20);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(3,30);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(4,40);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into locktest values(5,50);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;非唯一索引&quot;&gt;&lt;a href=&quot;#非唯一索引&quot; class=&quot;headerlink&quot; title=&quot;非唯一索引&quot;&gt;&lt;/a&gt;非唯一索引&lt;/h2&gt;&lt;h3 id=&quot;范围查询，临键锁（一）&quot;&gt;&lt;a href=&quot;#范围查询，临键锁（一）&quot; class=&quot;headerlink&quot; title=&quot;范围查询，临键锁（一）&quot;&gt;&lt;/a&gt;范围查询，临键锁（一）&lt;/h3&gt;&lt;h4 id=&quot;举例&quot;&gt;&lt;a href=&quot;#举例&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#事务A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; begin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from locktest where col1 &amp;gt; 30 and col1 &amp;lt; 50 for update;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | col1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  4 |   40 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#事务B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; begin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from locktest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | col1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 |   10 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  2 |   20 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  4 |   40 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  5 |   50 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为20时插入，发生阻塞，插入失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,20);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为30时插入，发生阻塞，插入失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,30);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为49时插入，发生阻塞，插入失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,49);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为50时插入，没有发生阻塞，插入成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(16,50);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为51时插入，没有发生阻塞，插入成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(18,51);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为19时插入，没有发生阻塞，插入成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into locktest(id,col1) values(17,19);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为20时更新，没有发生阻塞，更新成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update locktest set col1=20 where col1=20;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Rows matched: 1  Changed: 0  Warnings: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为40时更新，发生阻塞，更新失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update locktest set col1=40 where col1=40;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##col1为50时更新，发生阻塞，更新失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; update locktest set col1=50 where col1=50;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C^C -- query aborted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1317 (70100): Query execution was interrupted&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据（col1）&lt;/td&gt;
&lt;td&gt;10、20、40、50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查询条件&lt;/td&gt;
&lt;td&gt;&amp;gt; 30 and &amp;lt; 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;锁类型&lt;/td&gt;
&lt;td&gt;临键锁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;加锁区间&lt;/td&gt;
&lt;td&gt;(20，40]、(40，50]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;记录锁&lt;/td&gt;
&lt;td&gt;40，50&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL锁机制</title>
    <link href="http://vwkai.com/2019/08/25/mysql-lock/"/>
    <id>http://vwkai.com/2019/08/25/mysql-lock/</id>
    <published>2019-08-25T02:27:20.000Z</published>
    <updated>2022-02-23T07:38:12.972Z</updated>
    
    <content type="html"><![CDATA[<h3 id="共享锁"><a href="#共享锁" class="headerlink" title="共享锁"></a>共享锁</h3><p>共享锁又称为<font color="red">读锁</font>，简称<font color="red" size="4">S锁</font>，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。<br>其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。<br>如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不能加排他锁。获得共享锁的事务只能读数据，不能修改数据。</p><font color="red">使用方式：在需要执行的语句后面加上 lock in share mode</font><h3 id="排他锁"><a href="#排他锁" class="headerlink" title="排他锁"></a>排他锁</h3><p>排他锁又称为<font color="red">写锁</font>，简称<font color="red" size="4">X锁</font>，顾名思义，排他锁就是不能与其他所并存，如一个事务获取了一个数据行的排他锁，其他事务就不能再获取该行的其他锁，包括共享锁和排他锁，但是获取排他锁的事务是可以对数据就行读取和修改。排它锁是悲观锁的一种实现。<br>排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。mysql InnoDB引擎默认的修改数据语句，<font color="red">update,delete,insert都会自动给涉及到的数据加上排他锁。</font><br>select语句默认不会加任何锁类型，加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。<font color="red">所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过for update和lock in share mode锁的方式查询数据</font>，但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。<br>若事务 1 对数据对象A加上X锁，事务 1 可以读A也可以修改A，其他事务不能再对A加任何锁，直到事物 1 释放A上的锁。这保证了其他事务在事物 1 释放A上的锁之前不能再读取和修改A。<font color="red">排它锁会阻塞所有的排它锁和共享锁。</font></p><font color="red">使用方式：在需要执行的语句后面加上for update</font><a id="more"></a><h3 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h3><p>乐观锁不是数据库自带的，需要我们自己去实现。乐观锁是指操作数据库时(更新操作)，想法很乐观，认为这次的操作不会导致冲突，在操作数据时，并不进行任何其他的特殊处理（也就是不加锁），而在进行更新后，再去判断是否有冲突了。</p><p>通常实现是这样的：在表中的数据进行操作时(更新)，先<font color="red">给数据表加一个版本(version)字段</font>，每操作一次，将那条记录的版本号加1。也就是先查询出那条记录，获取出version字段,如果要对那条记录进行操作(更新),则先判断此刻version的值是否与刚刚查询出来时的version的值相等，如果相等，则说明这段期间，没有其他程序对其进行操作，则可以执行更新，将version字段的值加1；如果更新时发现此刻的version值与刚刚获取出来的version的值不相等，则说明这段期间已经有其他程序对其进行操作了，则不进行更新操作。</p><p>举例：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">下单操作包括3步骤：</span><br><span class="line"> </span><br><span class="line">1.查询出商品信息</span><br><span class="line"> </span><br><span class="line">select (status,status,version) from t_goods where id=#{id}</span><br><span class="line"> </span><br><span class="line">2.根据商品信息生成订单</span><br><span class="line"> </span><br><span class="line">3.修改商品status为2</span><br><span class="line"> </span><br><span class="line">update t_goods </span><br><span class="line"> </span><br><span class="line">set status=2,version=version+1</span><br><span class="line"> </span><br><span class="line">where id=#{id} and version=#{version};</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h3><p>对于悲观锁的概念解释主要有两种，但本质上悲观锁主要用于数据库访问的并发控制上。<br>解释一<br>悲观锁是指对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，在整个数据处理过程中，将数据处于锁定状态，在悲观锁的情况下，为了保证事务的隔离性，就需要一致性锁定读。读取数据时给加锁，其它事务无法修改这些数据。修改删除数据时也要加锁，其它事务无法读取这些数据。</p><p>解释二<br>在关系数据库管理系统里，悲观并发控制（又名“悲观锁”，Pessimistic Concurrency Control，缩写“PCC”）是一种并发控制的方法。它可以阻止一个事务以影响其他用户的方式来修改数据。如果一个事务执行的操作对某行数据应用了锁，那只有当这个事务把锁释放，其他事务才能够执行与该锁冲突的操作。</p><p>悲观锁处理流程：</p><ol><li>在对任意记录进行修改前，先尝试为该记录加上排他锁（exclusive locking）</li><li>如果加锁失败，说明该记录正在被修改，那么当前查询可能要等待或者抛出异常</li><li>如果成功加锁，那么就可以对记录做修改，事务完成后就会解锁了</li><li>其间如果有其他对该记录做修改或加排他锁的操作，都会等待我们解锁或直接抛出异常</li></ol><hr><h3 id="MySQL-InnoDB支持三种行锁定方式："><a href="#MySQL-InnoDB支持三种行锁定方式：" class="headerlink" title="MySQL InnoDB支持三种行锁定方式："></a>MySQL InnoDB支持三种行锁定方式：</h3><h5 id="1、记录锁（Record-Lock）"><a href="#1、记录锁（Record-Lock）" class="headerlink" title="1、记录锁（Record Lock）"></a>1、记录锁（Record Lock）</h5><p>定义：当SQL执行按照唯一性（Primary key、Unique key）索引进行数据的检索时，<font color="red">查询条件等值匹配且查询的数据是存在的</font>，这时SQL语句加上的锁即为记录锁（Record locks），锁住具体的索引项。<br>注意：</p><ul><li>行锁锁定的是索引记录，而不是行数据，也就是说锁定的是key</li><li>如果不是索引字段，则退化成表锁。</li></ul><h5 id="2、间隙锁（Gap-Lock）"><a href="#2、间隙锁（Gap-Lock）" class="headerlink" title="2、间隙锁（Gap Lock）"></a>2、间隙锁（Gap Lock）</h5><p>定义：锁定索引记录间隙，确保索引记录的间隙不变。<font color="red">对于键值在条件范围内但并不存在的记录，叫做“间隙（GAP)”</font>，InnoDB也会对这个“间隙”加锁，这种锁机制就是所谓的间隙锁（GAP LOCK）。<font color="red">Gap Lock在InnoDB的唯一作用就是防止其他事务的插入操作，以此防止幻读的发生。</font><br>注意：</p><ul><li>间隙锁是针对事务隔离级别为【可重复读】或以上级别才有的。如果把事务的隔离级别降级为【读已提交(Read Committed, RC)】，间隙锁则会自动失效。</li><li>区间锁，【<font color="red">左开右开</font>】，它封锁索引记录中的间隔，或者第一条索引记录之前的范围，又或者最后一条索引记录之后的范围。</li><li><font color="red">gap锁只会阻塞insert操作</font>，因为gap间隙中是不存在任何记录的，除了insert操作，其他的操作结果应该都等价于空操作，mysql就不去阻塞它了</li><li>范围查询或者等值查询且记录不存在</li></ul><h5 id="3、临键锁（Next-Key-Lock）"><a href="#3、临键锁（Next-Key-Lock）" class="headerlink" title="3、临键锁（Next-Key Lock）"></a>3、临键锁（Next-Key Lock）</h5><p>定义：行锁和间隙锁组合起来就叫临键锁（Next-Key Lock），它的封锁范围，既包含索引记录，又包含索引区间。<br>注意：</p><ul><li>会锁住一段【<font color="red">左开右闭</font>】区间的数据</li></ul><p><mark><a href="/2019/08/26/mysql-lock-rowlock-test/" title="MySQL行锁定测试">MySQL行锁定测试</a></mark></p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>如果更新条件没有走索引，此时会进行全表扫描（<font color="red">行锁在 InnoDB 中是基于索引实现的</font>），扫表的时候，要阻止其他任何的更新操作，所以退化为表锁.<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create table test;</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table | Create Table                                                                                                                                                                                                 |</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| test  | CREATE TABLE `test` (</span><br><span class="line">  `aa` varchar(30) NOT NULL,</span><br><span class="line">  `bb` varchar(40) NOT NULL,</span><br><span class="line">  `cc` varchar(50) NOT NULL,</span><br><span class="line">  `id` int(10) NOT NULL,</span><br><span class="line">  KEY `union_index` (`aa`,`bb`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1 |</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">##id字段没有任何索引</span><br></pre></td></tr></tbody></table></figure><p></p><table><thead><tr><th style="text-align:center">事务A</th><th style="text-align:center">事务B</th></tr></thead><tbody><tr><td style="text-align:center"><img src="/2019/08/25/mysql-lock/mysql-lock-locktable-1.png" alt=""></td><td style="text-align:center"><img src="/2019/08/25/mysql-lock/mysql-lock-locktable-2.png" alt=""> </td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;共享锁&quot;&gt;&lt;a href=&quot;#共享锁&quot; class=&quot;headerlink&quot; title=&quot;共享锁&quot;&gt;&lt;/a&gt;共享锁&lt;/h3&gt;&lt;p&gt;共享锁又称为&lt;font color=&quot;red&quot;&gt;读锁&lt;/font&gt;，简称&lt;font color=&quot;red&quot; size=&quot;4&quot;&gt;S锁&lt;/font&gt;，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。&lt;br&gt;其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。&lt;br&gt;如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不能加排他锁。获得共享锁的事务只能读数据，不能修改数据。&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;使用方式：在需要执行的语句后面加上 lock in share mode&lt;/font&gt;

&lt;h3 id=&quot;排他锁&quot;&gt;&lt;a href=&quot;#排他锁&quot; class=&quot;headerlink&quot; title=&quot;排他锁&quot;&gt;&lt;/a&gt;排他锁&lt;/h3&gt;&lt;p&gt;排他锁又称为&lt;font color=&quot;red&quot;&gt;写锁&lt;/font&gt;，简称&lt;font color=&quot;red&quot; size=&quot;4&quot;&gt;X锁&lt;/font&gt;，顾名思义，排他锁就是不能与其他所并存，如一个事务获取了一个数据行的排他锁，其他事务就不能再获取该行的其他锁，包括共享锁和排他锁，但是获取排他锁的事务是可以对数据就行读取和修改。排它锁是悲观锁的一种实现。&lt;br&gt;排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。mysql InnoDB引擎默认的修改数据语句，&lt;font color=&quot;red&quot;&gt;update,delete,insert都会自动给涉及到的数据加上排他锁。&lt;/font&gt;&lt;br&gt;select语句默认不会加任何锁类型，加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。&lt;font color=&quot;red&quot;&gt;所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过for update和lock in share mode锁的方式查询数据&lt;/font&gt;，但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。&lt;br&gt;若事务 1 对数据对象A加上X锁，事务 1 可以读A也可以修改A，其他事务不能再对A加任何锁，直到事物 1 释放A上的锁。这保证了其他事务在事物 1 释放A上的锁之前不能再读取和修改A。&lt;font color=&quot;red&quot;&gt;排它锁会阻塞所有的排它锁和共享锁。&lt;/font&gt;&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;使用方式：在需要执行的语句后面加上for update&lt;/font&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis常用命令</title>
    <link href="http://vwkai.com/2019/02/18/redis-common-command/"/>
    <id>http://vwkai.com/2019/02/18/redis-common-command/</id>
    <published>2019-02-18T12:21:15.000Z</published>
    <updated>2022-02-23T07:38:12.975Z</updated>
    
    <content type="html"><![CDATA[<p>Redis支持五种数据类型：字符串（String）、哈希（Hash）、列表（List）、集合（Set）、有序集合（sorted set）。</p><p>每一种数据类型所对应的操作命令不同，当然也存在一些通用的，而且Redis的所有命令有很多，本文中记录的都是日常使用频率相对多一些的。</p><p><strong>通用命令：</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">keys：遍历所有key【O(n)】</span><br><span class="line">dbsize：计算key的总数【O(1)】</span><br><span class="line">exists：检查key是否存在;返回(integer) 1或(integer) 0【O(1)】</span><br><span class="line">del：删除指定的key-value【O(1)】</span><br><span class="line">expire：给key设置过期时间，在seconds秒后过期【O(1)】</span><br><span class="line">ttl：查看可以剩余的过期时间 ;返回(integer) -1：key存在但没有过期时间，(integer) -2 ：key不存在【O(1)】</span><br><span class="line">persist：去掉key的过期时间【O(1)】</span><br><span class="line">type：返回key的类型【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>O(n)代表时间复杂度比较高，不建议在线上使用，O(1)代表时间复杂度较低，可以任意使用</strong><br><a id="more"></a></p><h2 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a>字符串（String）</h2><ul><li>最常见的数据类型</li><li>可以为任何类型的字符串，比如二进制，json对象</li><li>最大容量512M</li></ul><p><strong>【增】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setnx key value：key不存在时，才设置【O(1)】</span><br><span class="line">set key value：不管key是否存在，都设置【O(1)】</span><br><span class="line">incr key：key自增1并返回结果【O(1)】</span><br><span class="line">decr key：key自减1并返回结果【O(1)】</span><br><span class="line">incrby key k：key自增k，并返回结果【O(1)】</span><br><span class="line">decrby key k：key自减k，并返回结果【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【删】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del key【0(N)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【改】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set key value xx：key存在，才设置【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【查】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mget key1 key2 key3…：批量获取key，原子操作【O(n)】</span><br><span class="line">mset key1 value1 key2 value2 key3 value3：批量设置key-value【O(n)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【知识扩展】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getset key newvalue：set key newvalue并返回旧的value【O(1)】</span><br><span class="line">append key value：将value追加到旧的value【O(1)】</span><br><span class="line">strlen key：返回字符串的长度（注意中文）【O(1)】</span><br><span class="line">incrbyfloat key 3.5：增加key对应的值3.5【O(1)】（没有decrbyfloat的命令，如果要减去，传负数即可）</span><br><span class="line">getrange key start end：获取字符串指定下标所有的值【O(1)】</span><br><span class="line">strange key index value：设置指定下标对应所有的值【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="哈希（Hash）"><a href="#哈希（Hash）" class="headerlink" title="哈希（Hash）"></a>哈希（Hash）</h2><ul><li>与php Array相似</li><li>可以保存多个key-value，每个k-v都是字符串类型</li><li>最多2^32-1个字段</li></ul><p><strong>所有hash的命令，都是以“h”开头</strong></p><p><strong>【增】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hsetnx key field value：设置hash key对应field的value,key不存在时才设置【O(1)】</span><br><span class="line">hincrby key field count：hash key对应的field增加count，并返回（如果要减去，传负数）【O(1)】</span><br><span class="line">hincrbyfloat key field count(浮点)：hash key对应的field增加count（浮点），并返回（如果要减去，传负数）【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【删】</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdel key field：删除hash key对应field的value【O(1)】</span><br></pre></td></tr></tbody></table></figure><p><strong>【改】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hset key field value：设置hash key对应field的value【O(1)】</span><br><span class="line">hmset key field1 value1 field2 value2 field3 value3..fieldN valueN：批量设置hash key的一批field value【O(N)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【查】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hget key field：获取hash key对应的field的value【O(1)】</span><br><span class="line">hmget key field1 field2…fieldN：批量获取hash key的一批field对应的值【O(N)】</span><br><span class="line">hexists key field：判断hash key是否有field【O(1)】</span><br><span class="line">hlen key：获取hash key field的数量【O(1)】</span><br><span class="line">hgetall：获取hash key中所有的field和value【O(N)】（使用时需要注意redis时单线程，如果field比较多，性能会有影响）</span><br><span class="line">hvals key：返回hash key对应所有field的value【O(N)】</span><br><span class="line">hkeys key：返回hash key对应所有field【O(N)】</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="列表（List）"><a href="#列表（List）" class="headerlink" title="列表（List）"></a>列表（List）</h2><p><strong>【增】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpush key value1 value2 value3…valueN：从列表右端插入值（1-N个）【O(1~N)】</span><br><span class="line">lpush key value1 value2…valueN：从列表左端插入值（1～N个）【O(1~N)】</span><br><span class="line">linsert key before|after value newValue：在list指定的值前|后插入newValue【O(N)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【删】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lpop key：从列表左侧弹出一个item【O(1)】</span><br><span class="line">rpop key：从列表右侧弹出一个item【O(1)】</span><br><span class="line">lrem key count value：根据count值，从列表中删除所有value相等的项【O(n)】</span><br><span class="line">（1）count&gt;0,从左到右，删除最多count个value相等的项目</span><br><span class="line">（2）count&lt;0,从右到左，删除最多Math.abs(count)个value相等的项</span><br><span class="line">（3）count=0,删除所有value相等的项</span><br><span class="line">ltrim key start end：按照索引范围修剪列表【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【改】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lset key index newValue：设置列表指定索引为newValue【O(n)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【查】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lrange key start end(包含end)：获取列表指定索引范围所有item【O(N)】（start：0、end：-1 等于取所有的）</span><br><span class="line">lindex key index：获取列表指定索引的item【O(N)】</span><br><span class="line">llen key：获取列表长度【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【知识扩展】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blpop key timeout：lpop阻塞版本，timeout是阻塞超时时间，timeout=0时为永不阻塞【O(1)】</span><br><span class="line">brpop key timeout：rpop阻塞版本，timeout是阻塞超时时间，timeout=0时为永不阻塞【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【应用场景】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lpush + lpop = stack 实现栈的功能</span><br><span class="line">lpush + rpop = queue 实现队列功能</span><br><span class="line">lpush + ltrim = capped collection 实现有固定数量的列表</span><br><span class="line">lpush + brpop = message queue 实现消息队列功能</span><br><span class="line">llen + lpush = 可以实现秒杀场景</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="集合（Set）"><a href="#集合（Set）" class="headerlink" title="集合（Set）"></a>集合（Set）</h2><ul><li>集合中每个元素都是不同的</li><li>元素最多为2^32 - 1</li><li>元素没有顺序</li></ul><p><strong>特点：无序、无重复、支持集合间操作（交集、并集、差集）</strong></p><p><strong>所有集合的命令，都是以“s”开头</strong></p><p><strong>【增】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sadd key element：向集合key添加element（如果element已经存在，添加失败）【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【删】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">srem key element：将集合key中的element移除掉【O(1)】</span><br><span class="line">spop key：从集合中随机弹出一个元素</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【查】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scard key：计算集合大小</span><br><span class="line">sismember key element：返回1存在,0不存在。判断element是否在集合中</span><br><span class="line">srandmember key count：从集合中随机挑count个元素</span><br><span class="line">smembers key：获取集合所有元素（无序，小心使用，如果集合数据过大， 会有线程阻塞风险）</span><br><span class="line">sdiff key1 key2：取两个集合的差集</span><br><span class="line">sinter key1 key2：取两个集合的交集</span><br><span class="line">sunion key1 key2：取两个集合的并集</span><br><span class="line">sdiff|sinter|sunion + store destkey ： 将差集、交集、并集的结果保存在destkey中</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【应用场景】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sadd = tagging 实现标签的功能</span><br><span class="line">spop／srandmember = random item 常应用于随机数的一些场景</span><br><span class="line">sadd + sinter = social graph 常用语做一些社交相关的应用</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="有序集合（sorted-set）"><a href="#有序集合（sorted-set）" class="headerlink" title="有序集合（sorted set）"></a>有序集合（sorted set）</h2><p><strong>集合</strong> VS <strong>有序集合</strong> VS <strong>列表</strong></p><blockquote><p>集合：</p><blockquote><p>无重复元素<br>无序<br>element</p></blockquote></blockquote><blockquote><p>有序集合：</p><blockquote><p>无重复元素<br>有序<br>element + score</p></blockquote></blockquote><blockquote><p>列表：</p><blockquote><p>可以有重复元素<br>有序<br>element</p></blockquote></blockquote><p><strong>所有有序集合的命令，都是以“z”开头</strong></p><p><strong>【增】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zadd key score element（可以是多对）：添加score和element，score可以重复，element不可以重复【O(logN)】</span><br><span class="line">zincrby key incrScore element：增加或减少元素的分数【O(1)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【删】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zrem key element(可以是多个)：删除元素【O(1)】</span><br><span class="line">zremrangebyrank key start end：删除指定排名内的升序元素【O(log(n)+m)】</span><br><span class="line">zremrangebyscore key minScore maxScore：删除指定分数内的升序元素【O(log(n)+m)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>【查】</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zscore key element：返回元素的分数【O(1)】</span><br><span class="line">zcard key：返回元素的个数【O(1)】</span><br><span class="line">zrange key start end [withscores]：返回指定索引范围内的升序元素[分值]【O(log(n)+m)】</span><br><span class="line">zrangebyscore key minScore maxScore [withscores]：返回指定分数范围内的升序元素[分值]【O(log(n)+m)】</span><br><span class="line">zcount key minScore maxScore：返回有序集合内在指定分数范围内的个数【O(log(n)+m)】</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong><em>注：Redis的命令有很多，本文中记录的只是平时常用的一些命令。</em></strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis支持五种数据类型：字符串（String）、哈希（Hash）、列表（List）、集合（Set）、有序集合（sorted set）。&lt;/p&gt;
&lt;p&gt;每一种数据类型所对应的操作命令不同，当然也存在一些通用的，而且Redis的所有命令有很多，本文中记录的都是日常使用频率相对多一些的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通用命令：&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;keys：遍历所有key【O(n)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbsize：计算key的总数【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exists：检查key是否存在;返回(integer) 1或(integer) 0【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;del：删除指定的key-value【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expire：给key设置过期时间，在seconds秒后过期【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ttl：查看可以剩余的过期时间 ;返回(integer) -1：key存在但没有过期时间，(integer) -2 ：key不存在【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;persist：去掉key的过期时间【O(1)】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type：返回key的类型【O(1)】&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;O(n)代表时间复杂度比较高，不建议在线上使用，O(1)代表时间复杂度较低，可以任意使用&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Redis" scheme="http://vwkai.com/categories/Redis/"/>
    
    
      <category term="Redis" scheme="http://vwkai.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>PHP写时复制 Copy On Write</title>
    <link href="http://vwkai.com/2019/02/17/php-copy-on-write/"/>
    <id>http://vwkai.com/2019/02/17/php-copy-on-write/</id>
    <published>2019-02-17T08:08:25.000Z</published>
    <updated>2022-02-23T07:38:12.974Z</updated>
    
    <content type="html"><![CDATA[<p>写时复制Copy on Write，也缩写为COW。</p><p><b>优点：省去了分配内存和管理内存地址的计算开销, 减少资源的占用</b></p><p>COW是常用的优化手段，可以归类于：资源延迟分配。只有在真正需要使用资源时才占用资源， 写时复制通常能减少资源的占用。</p><p>关于内存使用情况，可以使用php函数：memory_get_usage() 来进行查看</p><p>例子：<br></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = range(<span class="number">0</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//系统会给$a开辟一块内存空间</span></span><br><span class="line">var_dump(memory_get_usage());</span><br><span class="line">$b = $a;</span><br><span class="line"><span class="comment">//此时$b也指向了$a的空间，两个变量共用一块内存空间</span></span><br><span class="line">var_dump(memory_get_usage());</span><br><span class="line">$a = range(<span class="number">0</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">//此时如果对$a或$b进行写操作时（不管值是否发生变化），会再拷贝一份新的空间出来 </span></span><br><span class="line">var_dump(memory_get_usage());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><p></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">执行结果为：</span><br><span class="line">int(455664)</span><br><span class="line">int(455696)</span><br><span class="line">int(525384)</span><br></pre></td></tr></tbody></table></figure><p>通过结果可以看出来，拷贝出新的内存空间后，内存占用量明显增加。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写时复制Copy on Write，也缩写为COW。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;优点：省去了分配内存和管理内存地址的计算开销, 减少资源的占用&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;COW是常用的优化手段，可以归类于：资源延迟分配。只有在真正需要使用资源时才占用资源， 写时复制通常能减少资源的占
      
    
    </summary>
    
      <category term="PHP" scheme="http://vwkai.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://vwkai.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>mysql设置数据库只读权限</title>
    <link href="http://vwkai.com/2019/01/15/mysql-set-readonly/"/>
    <id>http://vwkai.com/2019/01/15/mysql-set-readonly/</id>
    <published>2019-01-15T07:34:50.000Z</published>
    <updated>2022-02-23T07:38:12.974Z</updated>
    
    <content type="html"><![CDATA[<p>可以理解为开设一个账号，权限为只读</p><p>创建并授权用户</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT select ON *.* to 'test_readonly'@'localhost' identified by '1234';</span><br></pre></td></tr></tbody></table></figure><p>不必先insert into user…以后再进行授权，以上语句是创建用户的同时并且已授权</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以理解为开设一个账号，权限为只读&lt;/p&gt;
&lt;p&gt;创建并授权用户&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span
      
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>PHP魔术常量</title>
    <link href="http://vwkai.com/2018/12/30/php-magic-constants/"/>
    <id>http://vwkai.com/2018/12/30/php-magic-constants/</id>
    <published>2018-12-30T06:10:34.000Z</published>
    <updated>2022-02-23T07:38:12.974Z</updated>
    
    <content type="html"><![CDATA[<p>1、<strong>__METHOD__</strong>:返回所在类的方法的名称。与__FUNCTION__不用的是，__METHOD__返回的是”class::function”的形式，而__FUNCTION__返回”function”的形式。<br>2、<strong>__FILE__</strong>: 返回当前文件的完整路径。<br>3、<strong>__FUNCTION__</strong>:返回所在函数的名字。<br>4、<strong>__LINE__</strong>:返回文件中当前的行号。<br>5、<strong>__CLASS__</strong>:返回所在类的名字。<br>6、<strong>__DIR__</strong>:返回文件所在目录，如果用在被包含文件中，则返回被包含的文件所在的目录<br>7、<strong>__NAMESPACE__</strong>:返回当前命名空间的名称（区分大小写）。此常量是在编译时定义的。<br>8、<strong>__TRAIT__</strong>:返回Trait被定义时的名字。Trait名包含其被声明的作用区域。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、&lt;strong&gt;__METHOD__&lt;/strong&gt;:返回所在类的方法的名称。与__FUNCTION__不用的是，__METHOD__返回的是”class::function”的形式，而__FUNCTION__返回”function”的形式。&lt;br&gt;2、&lt;strong
      
    
    </summary>
    
      <category term="PHP" scheme="http://vwkai.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://vwkai.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>一台mysql服务器启动多个端口</title>
    <link href="http://vwkai.com/2018/08/07/mysql-multiple-port/"/>
    <id>http://vwkai.com/2018/08/07/mysql-multiple-port/</id>
    <published>2018-08-07T13:05:08.000Z</published>
    <updated>2022-02-23T07:38:12.974Z</updated>
    
    <content type="html"><![CDATA[<p>一、首先要先把my.cnf配置文件复制一份，开几个端口要复制几份，并且要重新命名。</p><p><code>cp /etc/my.cnf /etc/my3307.cnf</code></p><p>二、 修改/etc/my3307.cnf 配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port            = 3307</span><br><span class="line">socket          = /tmp/mysql3307.sock</span><br><span class="line">default-character-set=UTF</span><br><span class="line">[mysqld]</span><br><span class="line">user            = root</span><br><span class="line">port            = 3307</span><br><span class="line">basedir         = /alidata/server/mysql</span><br><span class="line">datadir         = /alidata/server/mysql3307/data</span><br><span class="line">socket          = /tmp/mysql3307.sock</span><br><span class="line">log-error=/alidata/log/mysql3307/error.log</span><br></pre></td></tr></tbody></table></figure><p>三、创建数据库指定存放数据的目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /alidata/server/mysql3307/data</span><br></pre></td></tr></tbody></table></figure><p>四、创建log日志存放目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /alidata/log/mysql3307/</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><p>五、初始化数据库<br>进入到/alidata/server/mysql目录下，执行以下命令：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/scripts/mysql_install_db --defaults-extra-file=/etc/my3307.cnf</span><br></pre></td></tr></tbody></table></figure><p>执行这条命令后如果提示个别文件在/根目录下找不到的情况，例如：<br>fill_help_tables.sql，mysql_security_commands.sql，mysql_system_tables_data.sql，mysql_system_tables.sql<br>就把这些文件拷贝到根目录下</p><p>六、启动mysql，要指定.cnf文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/bin/mysqld_safe --defaults-extra-file=/etc/my3307.cnf  &amp;</span><br></pre></td></tr></tbody></table></figure><p>七、连接数据库</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -S /tmp/mysql3307.sock -P 3307 使用这句命令进行连接</span><br></pre></td></tr></tbody></table></figure><p>但是可能会出现连接不上的情况<br>error: ‘Access denied for user ‘root‘@’localhost’ (using password: YES)’</p><p>解决方案： </p><p>1、停止数据库，杀掉mysql端口为3307的进程</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ax | grep mysql</span><br><span class="line">kill 22139#找到相应的进程号</span><br></pre></td></tr></tbody></table></figure><p>2、启动时跳过授权</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/bin/mysqld_safe --defaults-extra-file=/etc/my3307.cnf --skip-grant-tables &amp;</span><br></pre></td></tr></tbody></table></figure><p>3、连接数据库</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -S /tmp/mysql3307.sock -P 3307</span><br></pre></td></tr></tbody></table></figure><p>4、连接mysql后，对用户进行授权</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'root#mysql' WITH GRANT OPTION;</span><br></pre></td></tr></tbody></table></figure><p>但是在授权时，可能会提示错误<br>ERROR 1290 (HY000): The MySQL server is running with the –skip-grant-tables option so it cannot execute this statement</p><p>解决方法如下：</p><p>（1）执行：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></tbody></table></figure><p>（2）再执行：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'root#mysql' WITH GRANT OPTION;</span><br></pre></td></tr></tbody></table></figure><p>就可以授权成功了</p><p>5、退出mysql后，在停掉mysql端口3307的数据库</p><p>6、重新执行启动命令</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/alidata/server/mysql-5.6.21/bin/mysqld_safe --defaults-extra-file=/etc/my3307.cnf  &amp;</span><br></pre></td></tr></tbody></table></figure><p>7、mysql 端口3307 数据库创建成功</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、首先要先把my.cnf配置文件复制一份，开几个端口要复制几份，并且要重新命名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp /etc/my.cnf /etc/my3307.cnf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;二、 修改/etc/my3307.cnf 配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[client]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port            = 3307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket          = /tmp/mysql3307.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-character-set=UTF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user            = root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port            = 3307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir         = /alidata/server/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir         = /alidata/server/mysql3307/data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket          = /tmp/mysql3307.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-error=/alidata/log/mysql3307/error.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三、创建数据库指定存放数据的目录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /alidata/server/mysql3307/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;四、创建log日志存放目录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /alidata/log/mysql3307/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://vwkai.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://vwkai.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ssh登录免密码</title>
    <link href="http://vwkai.com/2018/08/05/ssh-no-passwd/"/>
    <id>http://vwkai.com/2018/08/05/ssh-no-passwd/</id>
    <published>2018-08-05T09:47:48.000Z</published>
    <updated>2022-02-23T07:38:12.975Z</updated>
    
    <content type="html"><![CDATA[<p>A机器访问B机器无需密码登录</p><p>A机器：</p><pre><code>cd ~/.sshssh-keygen -t rsa</code></pre><p>B机器：</p><pre><code>cd ~/.sshvi authorized_keys  将A机器~/.ssh/id_rsa.pub文件中的内容复制过来</code></pre><p>做完以上操作后，A服务器登陆B服务器时无需密码<br><a id="more"></a><br><strong>SSH互信的原理:</strong><br>Master作为客户端，要实现无密码公钥认证，连接到服务器Salve上时，需要在Master上生成一个密钥对，包括一个公钥和一个私钥，而后将公钥复制到所有的Salve上。当Master通过SSH链接到Salve上时，Salve会生成一个随机数并用Master的公钥对随机数进行加密，并发送给Master。Master收到加密数之后再用私钥解密，并将解密数回传给Salve，Salve确认解密数无误之后就允许Master进行连接了。这就是一个公钥认证过程，期间不需要手工输入密码，重要的过程是将Master上产生的公钥复制到Salve上  互信的原理了解了，我们可以把配置ssh互信的步骤进行有效的分割。 </p><ol><li>在要配置互信的机器(web-1和web-2)上生成各自经过认证的key文件</li><li>将所有的key文件汇总到一个总的认证文件夹中 </li><li>将打包的key发给想要进行互信的机器(web-1,web-2) </li><li>互信的验证</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A机器访问B机器无需密码登录&lt;/p&gt;
&lt;p&gt;A机器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.ssh
ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;B机器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.ssh
vi authorized_keys  将A机器~/.ssh/id_rsa.pub文件中的内容复制过来
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;做完以上操作后，A服务器登陆B服务器时无需密码&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SSH" scheme="http://vwkai.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>从这里开始</title>
    <link href="http://vwkai.com/2018/08/01/start-here/"/>
    <id>http://vwkai.com/2018/08/01/start-here/</id>
    <published>2018-08-01T01:48:16.000Z</published>
    <updated>2022-02-23T07:38:12.975Z</updated>
    
    <content type="html"><![CDATA[<p>工作的时间不算短了，但其实想想对于业务和技术并没有非常系统的整理，比较碎片化，平日里遇到的一些问题和解决方案没有完全落实到纸面上，有时觉得记忆力还可以…但是终归好记性不如烂笔头，还是决定通过blog方式进行梳理和归纳，将这几年积累的下来经验和技术做一个很好的沉淀，也以此督促自己，不断的扩充自己的知识点，建立良好的技术体系。在这里会记录一些技术知识、心得感想等等。</p><p>嗯，就从这里开始。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工作的时间不算短了，但其实想想对于业务和技术并没有非常系统的整理，比较碎片化，平日里遇到的一些问题和解决方案没有完全落实到纸面上，有时觉得记忆力还可以…但是终归好记性不如烂笔头，还是决定通过blog方式进行梳理和归纳，将这几年积累的下来经验和技术做一个很好的沉淀，也以此督促
      
    
    </summary>
    
    
  </entry>
  
</feed>
